{"version":3,"sources":["store/actions/actionTypes.js","store/reducers/conversations.js","store/reducers/messages.js","store/reducers/user.js","store/reducers/index.js","containers/auth/forget.js","services/axios.js","services/userService.js","store/actions/userAction.js","containers/auth/login.js","services/appService.js","store/actions/messageAction.js","components/conversation/conversation-search/ConversationSearch.js","components/controls/buttons/Button.js","components/conversation/no-conversations/NoConversations.js","images/index.js","components/conversation/conversation-item/ConversationItem.js","components/conversation/conversation-list/ConversationList.js","components/conversation/button-logout/LogOutButton.js","components/controls/icons/trash-icon/TrashIcon.js","components/chat-title/ChatTitle.js","components/message/Message.js","components/controls/buttons/FormButton.js","components/controls/icons/attachment-icon/AttachmentIcon.js","helper/common.js","containers/message/MessageList.js","components/modal.js","containers/shell/ChatShell.js","App.js","index.js"],"names":["actionTypes","Object","freeze","PROCESS_ACTION","PROCESS_ACTION_FAILED","UPDATE_TOKEN","PROCESS_MESSAGE_ACTION","PROCESS_MESSAGE_ACTION_FAILED","CONVERSATIONS_LOADED","MESSAGES_REQUESTED","NEW_MESSAGE_ADDED","CHANGE_LAST_MESSAGE","initialState","conversations","selectedConversation","conversationsReducer","state","action","type","payload","newselectedConversation","find","conversation","_id","conversationId","newState","selectedConversationIndex","findIndex","c","splice","length","findConversation","item","toString","data","id","latestMessageText","newMessage","isLoading","messageDetails","messagesReducer","isUserLoggedIn","window","localStorage","getItem","email","fullName","token","userId","lastActiveAt","userRole","userReducer","setItem","clear","combineReducers","conversationState","messagesState","userState","Forget","style","width","height","backgroundColor","instance","axios","create","baseURL","process","interceptors","response","use","SignOutService","delete","HandleSignIn","res","dispatch","user","Login","useState","showPassword","setShowPassword","password","values","setValues","useDispatch","errEmail","errPassword","err","setErr","handleChange","prop","event","target","value","_onSignin","a","post","errCode","errMessage","onKeyDonw","e","keyCode","className","FormControl","sx","m","variant","InputLabel","htmlFor","OutlinedInput","onChange","label","onKeyDown","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","prev","onMouseDown","preventDefault","edge","VisibilityOff","Visibility","to","userGetAllAdminOnline","get","headers","Authorization","catch","status","adminGetAllConversation","adminId","getDetailConversation","sendMessage","messagesRequested","role","skip","messageData","limit","SERVICES","refreshToken","newToken","toast","error","clearAll","messages","location","href","ConversationSearch","placeholder","Button","children","NoConversations","imageAdmin","imageUser","ConversationItem","isActive","onConversationItemSelected","classNames","useSelector","onChangeSelectedConversation","src","alt","moment","createdAt","startOf","fromNow","ConversationList","conversationItems","map","conversationIsActive","key","LogOutButton","onLogout","TrashIcon","enableBackground","version","viewBox","xmlSpace","xmlns","xmlnsXlink","fill","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeWidth","x1","x2","y1","y2","d","points","ChatTitle","onDeleteConversation","title","Message","isMyMessage","message","messageClass","imageThumbnail","image","text","FormButton","disabled","AttachmentIcon","handleChooseFile","inputFileRef","ref","hidden","x","y","convertFileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","socket","isMessageEmpty","textMessage","adjustTextMessage","trim","connect","userName","onMessageSubmitted","newMessageAdded","handleChangeLastMessage","callOtherSideChange","allMessages","setState","useRef","disableButton","_onReloadMessages","isConcat","useEffect","io","emit","roomId","console","log","disconnect","off","on","dataMessage","handleFormSubmit","Math","random","Date","toISOString","handleSendMessage","senderId","_onChooseFile","files","then","dataUrl","current","currentTarget","scrollTop","scrollHeight","clientHeight","ceil","newSkip","onScroll","index","onSubmit","name","CustomModal","props","toggle","modal","Modal","isOpen","zIndex","ModalHeader","ModalBody","ModalFooter","color","conversationChanged","loadConversations","loadConversation","HandleSignOut","setModal","App","exact","path","component","ChatShell","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","middleWare","thunk","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.895cab4c.chunk.js","sourcesContent":["const actionTypes = Object.freeze({\r\n    PROCESS_ACTION: \"PROCESS_ACTION\",\r\n    PROCESS_ACTION_FAILED: \"PROCESS_ACTION_FAILED\",\r\n    UPDATE_TOKEN: \"UPDATE_TOKEN\",\r\n\r\n    PROCESS_MESSAGE_ACTION: \"PROCESS_MESSAGE_ACTION\",\r\n    PROCESS_MESSAGE_ACTION_FAILED: \"PROCESS_MESSAGE_ACTION_FAILED\",\r\n    CONVERSATIONS_LOADED: \"CONVERSATIONS_LOADED\",\r\n    MESSAGES_REQUESTED: \"MESSAGES_REQUESTED\",\r\n    NEW_MESSAGE_ADDED: \"NEW_MESSAGE_ADDED\",\r\n\r\n    CHANGE_LAST_MESSAGE: \"CHANGE_LAST_MESSAGE\"\r\n})\r\nexport default actionTypes","import actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    conversations: [],\r\n    selectedConversation: {}\r\n};\r\n\r\ninitialState.selectedConversation = initialState.conversations[1];\r\n\r\nconst conversationsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'CONVERSATIONS_LOADED':\r\n            return {\r\n                ...state,\r\n                conversations: action.payload.conversations ? action.payload.conversations : []\r\n            };\r\n        case 'SELECTED_CONVERSATION_CHANGED':\r\n            let newselectedConversation =\r\n                state.conversations.find(\r\n                    conversation => conversation._id === action.conversationId\r\n                );\r\n\r\n            return {\r\n                ...state,\r\n                selectedConversation: newselectedConversation\r\n            };\r\n\r\n        case 'DELETE_CONVERSATION': {\r\n            if (state.selectedConversation) {\r\n                const newState = { ...state };\r\n\r\n                let selectedConversationIndex =\r\n                    newState.conversations.findIndex(c => c._id === newState.selectedConversation._id);\r\n                newState.conversations.splice(selectedConversationIndex, 1);\r\n\r\n                if (newState.conversations.length > 0) {\r\n                    if (selectedConversationIndex > 0) {\r\n                        --selectedConversationIndex;\r\n                    }\r\n\r\n                    newState.selectedConversation = newState.conversations[selectedConversationIndex];\r\n                } else {\r\n                    newState.selectedConversation = null;\r\n                }\r\n\r\n                return newState;\r\n            }\r\n\r\n            return state;\r\n        }\r\n        case actionTypes.CHANGE_LAST_MESSAGE: {\r\n            let findConversation = state.conversations.find(item => {\r\n                return item._id.toString() === action.data.id\r\n            })\r\n            findConversation.latestMessageText = action.data.newMessage\r\n            state.selectedConversation.latestMessageText = action.data.newMessage\r\n            return {\r\n                ...state\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default conversationsReducer;","import actionTypes from '../actions/actionTypes'\r\nconst initialState = {\r\n    isLoading: false,\r\n    messageDetails: []\r\n}\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PROCESS_MESSAGE_ACTION:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case actionTypes.MESSAGES_REQUESTED:\r\n            return {\r\n                ...state,\r\n                messageDetails: action.payload,\r\n                isLoading: false\r\n            }\r\n        case actionTypes.NEW_MESSAGE_ADDED:\r\n            return {\r\n                ...state,\r\n                isLoading: false\r\n            }\r\n        case actionTypes.PROCESS_MESSAGE_ACTION_FAILED:\r\n            return {\r\n                ...state,\r\n                isLoading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default messagesReducer;","import actionTypes from \"../actions/actionTypes\"\r\n\r\nconst initialState = {\r\n    isUserLoggedIn: !!window.localStorage.getItem('isUserLoggedIn'),\r\n    email: window.localStorage.getItem('email') || '',\r\n    fullName: window.localStorage.getItem('fullName') || '',\r\n    token: window.localStorage.getItem('token') || '',\r\n    userId: window.localStorage.getItem('userId') || '',\r\n    lastActiveAt: window.localStorage.getItem('lastActiveAt') || '',\r\n    userRole: window.localStorage.getItem('userRole') || ''\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN_SUCCESS\":\r\n            if (action.data) {\r\n                window.localStorage.setItem('isUserLoggedIn', true)\r\n                window.localStorage.setItem('email', action.data.email)\r\n                window.localStorage.setItem('fullName', action.data.fullName)\r\n                window.localStorage.setItem('token', action.data.token)\r\n                window.localStorage.setItem('userId', action.data.userId)\r\n                window.localStorage.setItem('lastActiveAt', action.data.lastActiveAt)\r\n                window.localStorage.setItem('userRole', action.data.userRole)\r\n                return {\r\n                    ...state,\r\n                    email: action.data.email || '',\r\n                    token: action.data.token || '',\r\n                    isUserLoggedIn: true,\r\n                    fullName: action.data.fullName || '',\r\n                    lastActiveAt: action.data.lastActiveAt || '',\r\n                    userId: action.data.userId || '',\r\n                    userRole: action.data.userRole || ''\r\n                }\r\n            }\r\n            return {}\r\n        case actionTypes.UPDATE_TOKEN: {\r\n            window.localStorage.setItem('token', action.token)\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        }\r\n        case 'USER_RESET': {\r\n            window.localStorage.clear();\r\n            return {\r\n                ...state,\r\n                isUserLoggedIn: false,\r\n                email: '',\r\n                token: '',\r\n                fullName: '',\r\n                lastActiveAt: '',\r\n                userId: '',\r\n                userRole: ''\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import { combineReducers } from 'redux';\r\n\r\nimport conversationState from './conversations';\r\nimport messagesState from './messages';\r\nimport userState from './user';\r\n\r\nexport default combineReducers({\r\n  conversationState,\r\n  messagesState,\r\n  userState\r\n});","import React from 'react'\r\n\r\nexport function Forget() {\r\n    return (\r\n        <div style={{ width: 100, height: 100, backgroundColor: \"#000\" }}>\r\n\r\n            Forget\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL || \"https://daisycare-support.herokuapp.com\"\r\n});\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n        // Thrown error for request with OK status code\r\n        const { data } = response;\r\n        return data;\r\n    }\r\n);\r\n\r\nexport default instance;","import axios from \"./axios\"\r\n\r\nconst SignOutService = (userId) => {\r\n    return axios.delete('/sign-out', { data: { userId: userId } })\r\n}\r\n\r\nconst SignInService = (data) => {\r\n    return axios.post(\"/sign-in\", data)\r\n}\r\n\r\nexport { SignOutService, SignInService }","import { SignOutService } from \"../../services/userService\"\r\n\r\nconst HandleSignIn = (res) => (dispatch) => {\r\n    dispatch({\r\n        type: \"LOGIN_SUCCESS\",\r\n        data: {\r\n            email: res.user.email,\r\n            token: res.token,\r\n            fullName: res.user.fullName,\r\n            lastActiveAt: res.user.lastActiveAt,\r\n            userId: res.user._id,\r\n            userRole: res.user.userRole\r\n        }\r\n    })\r\n}\r\n\r\nconst HandleSignOut = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch({\r\n            type: 'USER_RESET'\r\n        })\r\n        await SignOutService(userId)\r\n\r\n    }\r\n}\r\n\r\nexport {\r\n    HandleSignIn,\r\n    HandleSignOut\r\n}","import React, { useState } from 'react'\r\nimport './styles.scss'\r\nimport {\r\n    FormControl,\r\n    OutlinedInput,\r\n    InputLabel,\r\n    InputAdornment,\r\n    IconButton,\r\n    Button\r\n} from '@mui/material';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { Link } from 'react-router-dom';\r\nimport { SignInService } from '../../services/userService';\r\nimport { useDispatch } from 'react-redux';\r\nimport { HandleSignIn } from '../../store/actions/userAction';\r\n\r\nexport function Login() {\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const [values, setValues] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [err, setErr] = useState({\r\n        errEmail: '',\r\n        errPassword: ''\r\n    })\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(prev => !prev);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const validateInfo = () => {\r\n        if (!values.email) {\r\n            setErr({ ...err, errEmail: \"Email is not valid!\" })\r\n            return false\r\n        }\r\n        if (!values.password) {\r\n            setErr({ ...err, errPassword: \"Password is not valid!\" })\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    const _onSignin = async () => {\r\n        setErr({\r\n            errEmail: '',\r\n            errPassword: ''\r\n        })\r\n\r\n        let isValid = validateInfo()\r\n        if (!isValid)\r\n            return;\r\n        else {\r\n            const res = await SignInService({\r\n                email: values.email,\r\n                password: values.password\r\n            })\r\n\r\n            if (res && res.errCode === 0) {\r\n                dispatch(HandleSignIn(res.data))\r\n            } else {\r\n                if (res.errCode === 2) {\r\n                    setErr({\r\n                        errPassword: \"\",\r\n                        errEmail: res.errMessage,\r\n                    })\r\n                }\r\n                if (res.errCode === 3) {\r\n                    setErr({\r\n                        errMessage: \"\",\r\n                        errPassword: res.errMessage\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const onKeyDonw = (e) => {\r\n        if(e.keyCode === 13)\r\n            _onSignin()\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className='bg' />\r\n            <div className='bg2' />\r\n            <div className=\"content-left\" />\r\n            <div className=\"content-right\">\r\n                <h3 className=\"title\">Login</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <FormControl\r\n                        className=\"form-control\"\r\n                        sx={{\r\n                            m: 1,\r\n                            width: '100%'\r\n                        }} variant=\"outlined\">\r\n                        <InputLabel\r\n                            htmlFor=\"outlined-adornment-password\"\r\n                        >Your email</InputLabel>\r\n                        <OutlinedInput\r\n                            className=\"placholder\"\r\n                            id=\"outlined-adornment-password\"\r\n                            value={values.email}\r\n                            onChange={handleChange('email')}\r\n                            label=\"Yourasdasdsadsdaa\"\r\n                            onKeyDown={onKeyDonw}\r\n                        />\r\n                    </FormControl>\r\n                    <label className=\"err\">{err.errEmail}</label>\r\n\r\n                    <FormControl\r\n                        className=\"form-control\"\r\n                        sx={{\r\n                            m: 1,\r\n                            width: '100%'\r\n                        }} variant=\"outlined\">\r\n                        <InputLabel\r\n                            htmlFor=\"outlined-adornment-password\"\r\n                        >Your password</InputLabel>\r\n                        <OutlinedInput\r\n                            className=\"placholder\"\r\n                            id=\"outlined-adornment-password\"\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            value={values.password}\r\n                            onChange={handleChange('password')}\r\n                            label=\"TypefdgfgfgYour password\"\r\n                            onKeyDown={onKeyDonw}\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                    <label className=\"err\">{err.errPassword}</label>\r\n                    \r\n                    <p className='hint'>*  Use Daisy Care account</p>\r\n                    <Button\r\n                        className=\"button\"\r\n                        variant=\"contained\"\r\n                        onClick={() => _onSignin()}\r\n                        style={{ backgroundColor: \"#000333\" }}\r\n                    >Sign in</Button>\r\n                    <p className=\"mobile\">Try on mobile?</p>\r\n                    <div className=\"other-media\">\r\n                        <div className=\"android-app\" />\r\n                        <div className=\"ios-app\" />\r\n                    </div>\r\n\r\n                    <div className=\"forget\">\r\n                        <Link to=\"/forgot-password\">Forgot your password</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import axios from './axios'\r\n\r\nconst userGetAllAdminOnline = (userId, token) => {\r\n    return axios.get(`/api/get-all-channel-online?userId=${userId}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    }).catch(e => {\r\n        return e.response && e.response.status\r\n    })\r\n}\r\n\r\nconst adminGetAllConversation = (adminId, token) => {\r\n    return axios.get(`/api/get-all-user-inbox?adminId=${adminId}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    }).catch(e => {\r\n        return e.response && e.response.status\r\n    })\r\n}\r\n\r\nconst getDetailConversation = (data, token) => {\r\n    return axios.post(`/api/get-detail-inbox`, data, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    }).catch(e => {\r\n        return e.response && e.response.status\r\n    })\r\n}\r\n\r\nconst sendMessage = (data) => {\r\n    return axios.post(`/api/send-message`, data, {\r\n        headers: { Authorization: `Bearer ${data.token}` }\r\n    }).catch(e => {\r\n        return e.response && e.response.status\r\n    })\r\n}\r\n\r\nconst getToken = (data) => {\r\n    return axios.post('/refresh-token', data, {\r\n        headers: { Authorization: `Bearer ${data.token}` }\r\n    }).catch(e => {\r\n        return e.response && e.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    userGetAllAdminOnline,\r\n    getDetailConversation,\r\n    sendMessage,\r\n    getToken,\r\n    adminGetAllConversation\r\n}","import actionTypes from \"./actionTypes\";\r\nimport * as SERVICES from '../../services'\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const loadConversation = (userId, userRole, token) => async (dispatch) => {\r\n    dispatch({\r\n        type: actionTypes.PROCESS_MESSAGE_ACTION\r\n    })\r\n\r\n    let res = {};\r\n    if (userRole === \"R2\")\r\n        res = await SERVICES.userGetAllAdminOnline(userId, token)\r\n    else\r\n        res = await SERVICES.adminGetAllConversation(userId, token)\r\n    if (res) {\r\n        if (res === 401) {\r\n            let newToken = await refreshToken(userId, token)\r\n            if (newToken) {\r\n                toast.error('Request out of time. Let try again!')\r\n                dispatch({\r\n                    type: actionTypes.UPDATE_TOKEN,\r\n                    token: newToken\r\n                })\r\n            }\r\n            //get new token if cant redirect /login\r\n            else\r\n                clearAll()\r\n        } else if (res === 403) {\r\n            //force to /login\r\n            clearAll()\r\n        } else {\r\n            dispatch({\r\n                type: actionTypes.CONVERSATIONS_LOADED,\r\n                payload: {\r\n                    conversations: res.data && res.data\r\n                }\r\n            })\r\n        }\r\n    } else\r\n        dispatch({\r\n            type: actionTypes.PROCESS_MESSAGE_ACTION_FAILED\r\n        })\r\n}\r\n\r\nexport const conversationChanged = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: 'SELECTED_CONVERSATION_CHANGED',\r\n        conversationId: data.conversationId\r\n    })\r\n};\r\n\r\nexport const conversationsRequested = () => ({\r\n    type: 'CONVERSATIONS_REQUESTED'\r\n});\r\n\r\nexport const conversationDeleted = () => ({\r\n    type: 'DELETE_CONVERSATION'\r\n});\r\n\r\nexport const newMessageAdded = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: actionTypes.PROCESS_MESSAGE_ACTION\r\n    })\r\n\r\n    let res = await SERVICES.sendMessage(data)\r\n    if (res) {\r\n        if (res === 401) {\r\n            let newToken = await refreshToken(data.userId, data.token)\r\n            if (newToken) {\r\n                toast.error('Request out of time. Let try again!')\r\n                dispatch({\r\n                    type: actionTypes.UPDATE_TOKEN,\r\n                    token: newToken\r\n                })\r\n            }\r\n            //get new token if cant redirect /login\r\n            else\r\n                clearAll()\r\n        } else if (res === 403) {\r\n            //force to /login\r\n            clearAll()\r\n        } else {\r\n            dispatch({\r\n                type: actionTypes.NEW_MESSAGE_ADDED\r\n            })\r\n        }\r\n    } else\r\n        dispatch({\r\n            type: actionTypes.PROCESS_MESSAGE_ACTION_FAILED\r\n        })\r\n};\r\n\r\nexport const messagesRequested = async (data, dispatch) => {\r\n    const { conversationId, token, role, userId, skip } = data\r\n\r\n    const messageData = {\r\n        skip: skip,\r\n        limit: 10,\r\n        id: conversationId,\r\n        role: role\r\n    }\r\n    let res = await SERVICES.getDetailConversation(messageData, token);\r\n    if (res) {\r\n        if (res === 401) {\r\n            //get new token if cant redirect /login\r\n            let newToken = await refreshToken(userId, token)\r\n            if (newToken) {\r\n                toast.error('Request out of time. Let try again!')\r\n                dispatch({\r\n                    type: actionTypes.UPDATE_TOKEN,\r\n                    token: newToken\r\n                })\r\n            }\r\n            //force to /login\r\n            else\r\n                clearAll()\r\n        } else if (res === 403) {\r\n            //force to /login\r\n            clearAll()\r\n        } else {\r\n            return res.errCode === 0 ? res.data.messages : []\r\n        }\r\n    }\r\n    return []\r\n};\r\n\r\nconst refreshToken = async (userId, token) => {\r\n    let res = await SERVICES.getToken({\r\n        userId: userId,\r\n        token: token\r\n    })\r\n    if (res && res.token) {\r\n        return res.token;\r\n    } else {\r\n        clearAll()\r\n        return null\r\n    }\r\n}\r\n\r\nconst clearAll = () => {\r\n    window.localStorage.clear()\r\n    window.location.href = '/login'\r\n}\r\n\r\nexport const handleChangeLastMessage = (data) => ({\r\n    type: actionTypes.CHANGE_LAST_MESSAGE,\r\n    data: data\r\n})","import React, { useState } from 'react';\r\nimport './ConversationSearch.scss';\r\n\r\nconst ConversationSearch = ({ conversations }) => {\r\n    const [searchInput, setSearchInput] = useState('')\r\n\r\n    return (\r\n        <div id=\"search-container\">\r\n            {conversations && conversations.length > 0 && <input type=\"text\" placeholder=\"Search\" />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConversationSearch;","import React from 'react';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({children}) => {\r\n    return (\r\n        <>\r\n            <button className=\"primary-button\">{ children }</button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nimport Button from '../../controls/buttons/Button';\r\n\r\nimport './NoConversations.scss';\r\n\r\nconst NoConversations = () => {\r\n    return (\r\n        <div id=\"no-coversation-layout\">\r\n            <div id=\"no-conversation-content\">\r\n                <h2>No Admin Online Now</h2>\r\n                <p>Currently, We work from 8:00 a.m to 9:00 p.m.</p>\r\n                <p>Sorry for making you have to wait!.</p>\r\n                <p>If you want to receive notification when Channel is on. Click the button bellow!</p>\r\n                <Button>Notify Me</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NoConversations;","export const imageAdmin = \"https://bizweb.dktcdn.net/100/173/931/themes/233699/assets/sp3.jpg?1610425866100\"\r\nexport const imageUser=\"https://www.kindpng.com/picc/m/105-1055656_account-user-profile-avatar-avatar-user-profile-icon.png\"","import React from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport './ConversationItem.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport { imageAdmin, imageUser } from '../../../images';\r\nimport moment from 'moment';\r\n\r\n\r\nconst ConversationItem = ({ conversation, isActive, onConversationItemSelected }) => {\r\n    const className = classNames('conversation', {\r\n        'selected': isActive\r\n    });\r\n\r\n    const { userRole, token, userId } = useSelector(state => state.userState)\r\n\r\n    const onChangeSelectedConversation = async () => {\r\n        await onConversationItemSelected({\r\n            conversationId: conversation._id,\r\n            token: token,\r\n            role: userRole,\r\n            userId: userId\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={className} onClick={onChangeSelectedConversation}>\r\n            <img src={userRole === \"R2\" ? imageAdmin : imageUser} alt=\"imageAlt\" />\r\n            <div className=\"title-text\">{conversation.userId.fullName || conversation.adminId.fullName}</div>\r\n            <div className=\"created-date\">{moment(conversation && conversation.adminId && conversation.adminId.createdAt).startOf('hour').fromNow()}</div>\r\n            <div className=\"conversation-message\">\r\n                {conversation.latestMessageText ? conversation.latestMessageText : \"Chat now\"}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConversationItem;\r\n","import React from 'react';\r\n\r\nimport ConversationItem from '../conversation-item/ConversationItem';\r\nimport './ConversationList.scss';\r\n\r\nconst ConversationList = ({ conversations, selectedConversation, onConversationItemSelected }) => {\r\n    const conversationItems = conversations.map((conversation) => {\r\n        const conversationIsActive = selectedConversation && conversation._id === selectedConversation._id;\r\n\r\n        return <ConversationItem\r\n            key={conversation._id}\r\n            onConversationItemSelected={onConversationItemSelected}\r\n            isActive={conversationIsActive}\r\n            conversation={conversation} />;\r\n    });\r\n\r\n    return (\r\n        <div id=\"conversation-list\">\r\n            {conversationItems}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConversationList;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './LogOutButton.scss';\r\n\r\nconst LogOutButton = ({ onLogout }) => {\r\n\r\n    const { userId } = useSelector(state => state.userState)\r\n\r\n    return (\r\n        <div id=\"new-message-container\">\r\n            <button onClick={() => onLogout(userId)}>\r\n                <img src=\"https://img.icons8.com/flat-round/64/000000/shutdown--v1.png\" alt=\"Logout\" />\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LogOutButton;","import React from 'react';\r\n\r\nimport './TrashIcon.scss';\r\n\r\nconst TrashIcon = () => {\r\n    return (\r\n        <svg className=\"trash-logo\" enableBackground=\"new 0 0 500 500\" version=\"1.1\" viewBox=\"0 0 500 500\" xmlSpace=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\r\n            <g>\r\n                <line fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\" x1=\"101.642\" x2=\"120.633\" y1=\"134.309\" y2=\"430.972\"/>\r\n                <path d=\"   M120.633,430.972c0,10.5,8.519,19.031,18.992,19.031\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\"/>\r\n                <line fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\" x1=\"139.625\" x2=\"360.389\" y1=\"450.003\" y2=\"450.003\"/>\r\n                <path d=\"   M360.389,450.003c10.474,0,18.979-8.531,18.979-19.031\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\"/>\r\n                <polyline fill=\"none\" points=\"   379.367,430.972 398.386,134.309 101.642,134.309  \" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\"/>\r\n                <path d=\"   M432.779,115.973c0,10.059-8.143,18.215-18.188,18.215\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\"/>\r\n                <line fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\" x1=\"414.592\" x2=\"85.409\" y1=\"134.188\" y2=\"134.188\"/>\r\n                <path d=\"   M85.409,134.188c-10.018,0-18.188-8.156-18.188-18.215\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\"/>\r\n                <path d=\"   M67.221,115.973c0-10.019,8.17-18.188,18.188-18.188\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\"/>\r\n                <line fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\" x1=\"85.409\" x2=\"414.592\" y1=\"97.784\" y2=\"97.784\"/>\r\n                <path d=\"   M414.592,97.784c10.045,0,18.188,8.17,18.188,18.188\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\"/>\r\n                <line fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\" x1=\"307.364\" x2=\"307.364\" y1=\"97.49\" y2=\"68.988\"/>\r\n                <path d=\"   M307.364,68.988c0-10.474-8.505-18.991-18.965-18.991\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\"/>\r\n                <line fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\" x1=\"288.399\" x2=\"211.628\" y1=\"49.997\" y2=\"49.997\"/>\r\n                <path d=\"   M211.628,49.997c-10.487,0-18.979,8.518-18.979,18.991\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\"/>\r\n                <polyline fill=\"none\" points=\"   192.649,68.988 192.649,97.49 307.364,97.49  \" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\"/>\r\n            </g>\r\n            <g>\r\n                <line fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\" x1=\"166.332\" x2=\"166.332\" y1=\"172.278\" y2=\"406.06\"/>\r\n                <line fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\" x1=\"222.102\" x2=\"222.102\" y1=\"172.278\" y2=\"406.06\"/>\r\n                <line fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\" x1=\"277.926\" x2=\"277.926\" y1=\"172.278\" y2=\"406.06\"/>\r\n                <line fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\" x1=\"333.669\" x2=\"333.669\" y1=\"172.278\" y2=\"406.06\"/>\r\n            </g>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default TrashIcon;","import React from 'react';\r\n\r\nimport TrashIcon from '../controls/icons/trash-icon/TrashIcon';\r\n\r\nimport './ChatTitle.scss';\r\n\r\nconst ChatTitle = ({ selectedConversation, onDeleteConversation }) => {\r\n    \r\n    return (\r\n        <div id=\"chat-title\">\r\n            {selectedConversation && \r\n                <>\r\n                <span>{selectedConversation.adminId.fullName}</span>\r\n                <div onClick={() => onDeleteConversation()} title=\"Delete Conversation\">\r\n                    <TrashIcon />\r\n                </div>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatTitle;","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './Message.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport { imageAdmin, imageUser } from '../../images';\r\nimport moment from 'moment';\r\n\r\nconst Message = ({ isMyMessage, message }) => {\r\n    const messageClass = classNames('message-row', {\r\n        'you-message': isMyMessage,\r\n        'other-message': !isMyMessage\r\n    });\r\n\r\n    const { userRole } = useSelector(state => state.userState)\r\n\r\n    const imageThumbnail = isMyMessage\r\n        ? null\r\n        : <img src={userRole === \"R2\" ? imageAdmin : imageUser} alt={'imageAlt'} />;\r\n\r\n    return (\r\n        <div className={messageClass}>\r\n            <div className=\"message-content\">\r\n                {imageThumbnail}\r\n                <div className=\"message-text\">\r\n                    {message.image ? <img src={message.image} className='w-100' /> : message.text}\r\n                </div>\r\n                <div className=\"message-time\">{moment(message.createdAt).startOf('second').fromNow()}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\n\r\nimport './Button.scss';\r\n\r\nconst FormButton = ({children, disabled}) => {\r\n    return (\r\n        <>\r\n            <button \r\n                type=\"submit\" \r\n                className=\"primary-button\"\r\n                disabled={disabled}>{ children }</button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FormButton;","import React from 'react';\r\n\r\nimport './AttachmentIcon.scss';\r\n\r\nconst AttachmentIcon = ({ handleChooseFile, inputFileRef }) => {\r\n    return (\r\n        <>\r\n            <input ref={inputFileRef} type=\"file\" id=\"file\" hidden onChange={handleChooseFile} />\r\n            <label htmlFor=\"file\">\r\n                <svg\r\n                    version=\"1.1\" className=\"attachment-logo\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n                    viewBox=\"0 0 512.001 512.001\" xmlSpace=\"preserve\">\r\n                    <path d=\"M475.753,61.289c-48.329-48.329-126.967-48.329-175.296,0L15.535,346.212\r\n                c-20.713,20.713-20.713,54.413,0,75.127l50.085,50.085c20.713,20.713,54.413,20.713,75.127,0l221.305-221.305\r\n                c20.713-20.713,20.713-54.413,0-75.127s-54.413-20.713-75.127,0L168.981,292.935c-6.915,6.915-6.915,18.127,0,25.042\r\n                c6.915,6.915,18.127,6.915,25.042,0l117.943-117.943c6.903-6.903,18.137-6.906,25.042,0c6.906,6.906,6.903,18.14,0,25.042\r\n                L115.705,446.38c-6.903,6.903-18.137,6.906-25.042,0l-50.085-50.085c-6.906-6.906-6.903-18.14,0-25.042L325.499,86.332\r\n                c34.519-34.519,90.689-34.522,125.211,0s34.519,90.693,0,125.211l-181.56,181.56c-6.915,6.915-6.915,18.127,0,25.042\r\n                c6.915,6.915,18.127,6.915,25.042,0l181.56-181.56C524.083,188.256,524.083,109.62,475.753,61.289z\"/>\r\n                    <g>\r\n                        <path d=\"M299.446,187.512L181.503,305.456c-4.623,4.623-6.081,11.149-4.523,17.045\r\n                    c-2.924-0.772-5.705-2.231-7.997-4.523c-6.915-6.915-6.915-18.127,0-25.042l117.943-117.943c20.713-20.713,54.413-20.713,75.127,0\r\n                    c2.137,2.137,3.999,4.44,5.695,6.826C347.015,167.074,318.022,168.936,299.446,187.512z\"/>\r\n                        <path d=\"M456.654,92.911c2.265,1.855,4.465,3.83,6.578,5.943c34.522,34.522,34.519,90.693,0,125.211\r\n                    l-181.56,181.56c-4.623,4.623-6.081,11.149-4.523,17.045c-2.924-0.772-5.705-2.231-7.997-4.523c-6.915-6.915-6.915-18.127,0-25.042\r\n                    l181.56-181.56C483.117,179.138,485.094,127.655,456.654,92.911z\"/>\r\n                        <path d=\"M115.705,446.38l221.305-221.305c4.613-4.613,6.07-11.142,4.519-17.04\r\n                    c2.927,0.77,5.712,2.228,8.003,4.519c6.906,6.906,6.903,18.14,0,25.042L128.226,458.902c-6.903,6.903-18.137,6.906-25.042,0\r\n                    L90.663,446.38C97.568,453.286,108.802,453.283,115.705,446.38z\"/>\r\n                        <path d=\"M312.978,73.811L28.057,358.732c-20.713,20.713-20.713,54.413,0,75.127l-12.521-12.521\r\n                    c-20.713-20.713-20.713-54.413,0-75.127L300.457,61.289c48.329-48.329,126.967-48.329,175.296,0\r\n                    c2.113,2.113,4.015,4.354,5.943,6.577C433.056,25.693,359.195,27.594,312.978,73.811z\"/>\r\n                    </g>\r\n                </svg>\r\n\r\n            </label>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AttachmentIcon;","import queryString from 'query-string'\r\n\r\nexport const getQueryString = (query) => {\r\n  const result = queryString.stringify(\r\n    query,\r\n  )\r\n\r\n  if (!result) return ''\r\n  return `?${result}`\r\n}\r\n\r\nexport const debounced = (delay, fn) => {\r\n  let timerId\r\n\r\n  return (...args) => {\r\n    if (timerId) {\r\n      clearTimeout(timerId)\r\n    }\r\n\r\n    timerId = setTimeout(() => {\r\n      fn(...args)\r\n      timerId = null\r\n    }, delay)\r\n  }\r\n}\r\n\r\nexport const capitalizeFirstLetter = (stringText) => {\r\n  return stringText.charAt(0).toUpperCase() + stringText.slice(1)\r\n}\r\n\r\nexport const getParameterByName = (name, url) => {\r\n  if (!url) url = ''\r\n  // eslint-disable-next-line\r\n  name = name.replace(/[\\[\\]]/g, '\\\\$&')\r\n  let regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\r\n    results = regex.exec(url)\r\n  if (!results) return null\r\n  if (!results[2]) return ''\r\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '))\r\n}\r\n\r\nexport const isEquivalent = (a, b) => {\r\n  // Create arrays of property names\r\n  let aProps = Object.getOwnPropertyNames(a)\r\n  let bProps = Object.getOwnPropertyNames(b)\r\n  // If number of properties is different,\r\n  // objects are not equivalent\r\n  if (aProps.length !== bProps.length) {\r\n    return false\r\n  }\r\n  for (let i = 0; i < aProps.length; i++) {\r\n    let propName = aProps[i]\r\n    // If values of same property are not equal,\r\n    // objects are not equivalent\r\n    if (a[propName] !== b[propName]) {\r\n      return false\r\n    }\r\n  }\r\n  // If we made it this far, objects\r\n  // are considered equivalent\r\n  return true\r\n}\r\n\r\nexport const xoa_dau = (str) => {\r\n  str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, \"a\");\r\n  str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, \"e\");\r\n  str = str.replace(/ì|í|ị|ỉ|ĩ/g, \"i\");\r\n  str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, \"o\");\r\n  str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, \"u\");\r\n  str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, \"y\");\r\n  str = str.replace(/đ/g, \"d\");\r\n  str = str.replace(/À|Á|Ạ|Ả|Ã|Â|Ầ|Ấ|Ậ|Ẩ|Ẫ|Ă|Ằ|Ắ|Ặ|Ẳ|Ẵ/g, \"A\");\r\n  str = str.replace(/È|É|Ẹ|Ẻ|Ẽ|Ê|Ề|Ế|Ệ|Ể|Ễ/g, \"E\");\r\n  str = str.replace(/Ì|Í|Ị|Ỉ|Ĩ/g, \"I\");\r\n  str = str.replace(/Ò|Ó|Ọ|Ỏ|Õ|Ô|Ồ|Ố|Ộ|Ổ|Ỗ|Ơ|Ờ|Ớ|Ợ|Ở|Ỡ/g, \"O\");\r\n  str = str.replace(/Ù|Ú|Ụ|Ủ|Ũ|Ư|Ừ|Ứ|Ự|Ử|Ữ/g, \"U\");\r\n  str = str.replace(/Ỳ|Ý|Ỵ|Ỷ|Ỹ/g, \"Y\");\r\n  str = str.replace(/Đ/g, \"D\");\r\n  return str;\r\n}\r\n\r\nexport const number_to_price = (v) => {\r\n\r\n  if (v === 0) { return '0'; }\r\n\r\n  if (!v || v === \"\") {\r\n    return v\r\n  }\r\n  v = v.toString();\r\n\r\n  v = v.replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1.\");\r\n\r\n  v = v.split(',').join('*').split('.').join(',').split('*').join('.');\r\n  return v;\r\n}\r\n\r\nexport const price_to_number = (v) => {\r\n  if (!v) { return 0; }\r\n  v = v.split(',').join('');\r\n  v = v.split('.').join(',');\r\n\r\n  return Number(v);\r\n}\r\n\r\nexport function validateEmail(email) {\r\n  // eslint-disable-next-line\r\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(email);\r\n}\r\n\r\nexport function validatePass(pass) {\r\n  const passw = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,20}$/;\r\n  return passw.test(pass);\r\n}\r\n\r\nexport function validateNumberPhone(number) {\r\n  let c1 = number.substring(0, 4);\r\n  if (c1 === \"+855\") {\r\n    return true;\r\n  }\r\n  c1 = number.substring(0, 3);\r\n  return c1 === \"+60\" || c1 === \"+84\";\r\n}\r\n\r\nexport function convertFileToBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = reject;\r\n  });\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { messagesRequested, newMessageAdded } from '../../store/actions';\r\nimport Message from '../../components/message/Message';\r\nimport './MessageList.scss';\r\nimport FormButton from '../../components/controls/buttons/FormButton';\r\nimport AttachmentIcon from '../../components/controls/icons/attachment-icon/AttachmentIcon';\r\nimport io from 'socket.io-client'\r\nimport { convertFileToBase64 } from '../../helper/common'\r\n\r\nconst isMessageEmpty = (textMessage) => {\r\n    return adjustTextMessage(textMessage).length === 0;\r\n}\r\n\r\nconst adjustTextMessage = (textMessage) => {\r\n    return textMessage.trim();\r\n};\r\n\r\nlet socket\r\n\r\nconst MessageList = ({\r\n    conversationId,\r\n    onMessageSubmitted,\r\n    adminId,\r\n    userId,\r\n    userRole,\r\n    userName,\r\n    token,\r\n    handleChangeLastMessage,\r\n    callOtherSideChange\r\n}) => {\r\n    const [state, setState] = useState({\r\n        allMessages: [],\r\n        textMessage: '',\r\n        skip: 0\r\n    })\r\n    const inputFileRef = useRef()\r\n\r\n    const {\r\n        allMessages,\r\n        textMessage,\r\n        skip\r\n    } = state\r\n    const dispatch = useDispatch()\r\n\r\n    const disableButton = isMessageEmpty(textMessage);\r\n\r\n    const _onReloadMessages = async (skip, isConcat) => {\r\n        let message = await messagesRequested({\r\n            conversationId: conversationId,\r\n            token: token,\r\n            role: userRole,\r\n            userId: userId,\r\n            skip: skip\r\n        }, dispatch)\r\n        if (message && message.length > 0) {\r\n            setState(prev => ({\r\n                ...prev,\r\n                textMessage: '',\r\n                file: null,\r\n                allMessages: isConcat ? [...state.allMessages, ...message] : message\r\n            }))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        _onReloadMessages(0, false)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (conversationId) {\r\n            _onReloadMessages(0, false)\r\n        }\r\n    }, [conversationId])\r\n\r\n    useEffect(() => {\r\n        socket = io(process.env.REACT_APP_API_URL || \"https://daisycare-support.herokuapp.com\")\r\n\r\n        socket.emit('join', { userId: userId, userName: userName, roomId: conversationId }, async (e) => {\r\n            console.log('connect error')\r\n        })\r\n\r\n        return () => {\r\n            socket.disconnect()\r\n            socket.off()\r\n        }\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        socket.on('receiveMessage', async (dataMessage) => {\r\n            setState({\r\n                ...state,\r\n                allMessages: [\r\n                    { ...dataMessage },\r\n                    ...state.allMessages\r\n                ]\r\n            })\r\n            handleChangeLastMessage({\r\n                newMessage: dataMessage.image ? \"File\" : dataMessage.text,\r\n                id: conversationId\r\n            })\r\n        })\r\n    }, [socket])\r\n\r\n    const handleFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!adminId || !userId) return\r\n\r\n        if (!isMessageEmpty(textMessage)) {\r\n            const dataMessage = {\r\n                \"_id\": Math.random(),\r\n                \"text\": textMessage,\r\n                \"createdAt\": new Date().toISOString(),\r\n                \"isRead\": false,\r\n                \"image\": null,\r\n                \"senderId\": userId\r\n            }\r\n            await handleSendMessage(dataMessage)\r\n        };\r\n\r\n    }\r\n\r\n    async function handleSendMessage(dataMessage) {\r\n        await socket.emit('sendMessage',\r\n            { roomId: conversationId, dataMessage: dataMessage },\r\n            async (senderId) => {\r\n                await onMessageSubmitted({\r\n                    _id: conversationId,\r\n                    text: textMessage,\r\n                    senderId: userId,\r\n                    userId: userId,\r\n                    createdAt: new Date(),\r\n                    token: token,\r\n                    adminId: adminId._id,\r\n                    image: dataMessage.image\r\n                });\r\n\r\n                if (senderId === userId) {\r\n                    setState({\r\n                        ...state,\r\n                        allMessages: [\r\n                            { ...dataMessage },\r\n                            ...state.allMessages\r\n                        ],\r\n                        textMessage: ''\r\n                    })\r\n                    handleChangeLastMessage({\r\n                        newMessage: textMessage ? textMessage : \"File\",\r\n                        id: conversationId\r\n                    })\r\n                    callOtherSideChange()\r\n                }\r\n            })\r\n    }\r\n\r\n    const _onChooseFile = async (e) => {\r\n        if (!adminId || !userId) return\r\n        let attachment = e.target.files[0]\r\n        convertFileToBase64(attachment).then(async dataUrl => {\r\n            if (dataUrl) {\r\n                const dataMessage = {\r\n                    \"_id\": Math.random(),\r\n                    \"text\": null,\r\n                    \"createdAt\": new Date().toISOString(),\r\n                    \"isRead\": false,\r\n                    \"image\": dataUrl,\r\n                    \"senderId\": userId\r\n                }\r\n                inputFileRef.current.value = ''\r\n                console.log(inputFileRef.current)\r\n                console.log(inputFileRef.current.value)\r\n                console.log(inputFileRef)\r\n                await handleSendMessage(dataMessage)\r\n            };\r\n        })\r\n    }\r\n\r\n    const _onChangeTextInput = (e) => {\r\n        const { value, name } = e.target\r\n        setState(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    async function handleOnScroll(e) {\r\n        const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\r\n        if (Math.ceil((-scrollTop) + clientHeight) === scrollHeight) {\r\n            const newSkip = skip + 10\r\n            setState({\r\n                ...state,\r\n                skip: newSkip\r\n            })\r\n            await _onReloadMessages(newSkip, true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div onScroll={handleOnScroll} id=\"chat-message-list\">\r\n                {allMessages.length > 0 ? allMessages.map((message, index) => {\r\n                    return <Message\r\n                        key={index}\r\n                        isMyMessage={message.senderId === userId}\r\n                        message={message} />;\r\n                }) : (\r\n                    <></>\r\n                )}\r\n            </div>\r\n            <form id=\"chat-form\" onSubmit={handleFormSubmit}>\r\n                <div title=\"Add Attachment\">\r\n                    <AttachmentIcon handleChooseFile={_onChooseFile} inputFileRef={inputFileRef} />\r\n                </div>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"type a message\"\r\n                    value={textMessage}\r\n                    name=\"textMessage\"\r\n                    onChange={_onChangeTextInput}\r\n                />\r\n                <FormButton disabled={disableButton}>Send</FormButton>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.userState.userId,\r\n        userRole: state.userState.userRole,\r\n        token: state.userState.token,\r\n        userName: state.userState.fullName\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onMessageSubmitted: (data) => dispatch(newMessageAdded(data))\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MessageList);","\r\nimport React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst CustomModal = (props) => {\r\n  const {\r\n    toggle,\r\n    modal\r\n  } = props;\r\n\r\n  return (\r\n      <Modal isOpen={modal} toggle={toggle} style={{zIndex: 100}}>\r\n        <ModalHeader toggle={toggle}>Welcome to Daisy Care Support page!</ModalHeader>\r\n        <ModalBody>\r\n            <h3>Currently, We work from 8:00 a.m to 9:00 p.m.</h3>\r\n            <h5>Channel 1: Ask about common problems.</h5>\r\n            <h5>Channel 2: Support you booking schedule/ change schedule.</h5>\r\n            <h5>Channel 3: Ask/Complain about our service.</h5>\r\n            <h6>Have a good day!</h6>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={toggle}>I got it</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n  );\r\n}\r\n\r\nexport default CustomModal;","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n    conversationChanged,\r\n    conversationDeleted,\r\n    loadConversation,\r\n    HandleSignOut,\r\n    handleChangeLastMessage\r\n} from '../../store/actions';\r\nimport ConversationSearch from '../../components/conversation/conversation-search/ConversationSearch';\r\nimport NoConversations from '../../components/conversation/no-conversations/NoConversations';\r\nimport ConversationList from '../../components/conversation/conversation-list/ConversationList';\r\nimport LogoutButton from '../../components/conversation/button-logout/LogOutButton';\r\nimport ChatTitle from '../../components/chat-title/ChatTitle';\r\nimport MessageList from '../message/MessageList';\r\nimport CustomModal from '../../components/modal'\r\n\r\nimport './ChatShell.scss';\r\n\r\nconst ChatShell = ({\r\n    conversations,\r\n    selectedConversation,\r\n    conversationChanged,\r\n    onDeleteConversation,\r\n    loadConversations,\r\n    onLogout,\r\n    userRole,\r\n    userId,\r\n    token,\r\n    handleChangeLastMessage\r\n}) => {\r\n    useEffect(() => {\r\n        loadConversations(userId, userRole, token);\r\n    }, [])\r\n\r\n    function callOtherSideChange() {\r\n        loadConversations(userId, userRole, token);\r\n    }\r\n\r\n    const [modal, setModal] = useState(userRole === \"R2\" ? true : false);\r\n\r\n    const toggle = () => setModal(!modal);\r\n\r\n    return (\r\n        <>\r\n            <div id=\"chat-container\">\r\n                <ConversationSearch conversations={conversations} />\r\n                <ConversationList\r\n                    onConversationItemSelected={conversationChanged}\r\n                    conversations={conversations}\r\n                    selectedConversation={selectedConversation} />\r\n                <LogoutButton\r\n                    onLogout={onLogout}\r\n                />\r\n                <ChatTitle\r\n                    selectedConversation={selectedConversation}\r\n                    onDeleteConversation={onDeleteConversation}\r\n                />\r\n                {\r\n                    conversations.length > 0 ? (\r\n                        <MessageList\r\n                            conversationId={(selectedConversation && selectedConversation._id) || ''}\r\n                            adminId={(selectedConversation && selectedConversation.adminId) || ''}\r\n                            handleChangeLastMessage={handleChangeLastMessage}\r\n                            callOtherSideChange={callOtherSideChange}\r\n                        />\r\n                    ) : (\r\n                        <NoConversations />\r\n                    )\r\n                }\r\n            </div>\r\n            <CustomModal toggle={toggle} modal={modal} />\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        conversations: state.conversationState.conversations,\r\n        selectedConversation: state.conversationState.selectedConversation,\r\n        userRole: state.userState.userRole,\r\n        token: state.userState.token,\r\n        userId: state.userState.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    conversationChanged: (data) => dispatch(conversationChanged(data)),\r\n    onDeleteConversation: () => dispatch(conversationDeleted()),\r\n    loadConversations: (userId, userRole, token) => dispatch(loadConversation(userId, userRole, token)),\r\n    onLogout: (userId) => dispatch(HandleSignOut(userId)),\r\n    handleChangeLastMessage: (data) => dispatch(handleChangeLastMessage(data))\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ChatShell);","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\"\r\nimport { Forget, Login } from './containers/auth'\r\nimport ChatShell from './containers/shell/ChatShell'\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst App = () => {\r\n  const { isUserLoggedIn } = useSelector(state => state.userState)\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path='/' component={ChatShell} />\r\n          <Route exact path='/login' component={Login} />\r\n          <Route exact path='forgot-password' component={Forget} />\r\n        </Switch>\r\n        <Redirect to={isUserLoggedIn ? '/' : '/login'} />\r\n      </Router>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={2000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"dark\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport './index.scss';\r\nimport rootReducer from './store/reducers';\r\nimport App from './App';\r\n\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(...middleWare)\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}