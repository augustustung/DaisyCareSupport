{"version":3,"sources":["store/reducers/conversations.js","store/actions/actionTypes.js","store/reducers/messages.js","store/reducers/user.js","store/reducers/index.js","containers/auth/forget.js","services/axios.js","services/userService.js","store/actions/userAction.js","containers/auth/login.js","services/appService.js","containers/message/MessageList.js","store/actions/messageAction.js","components/conversation/conversation-search/ConversationSearch.js","components/controls/buttons/Button.js","components/conversation/no-conversations/NoConversations.js","images/index.js","components/conversation/conversation-item/ConversationItem.js","components/conversation/conversation-list/ConversationList.js","components/conversation/button-logout/LogOutButton.js","components/controls/icons/trash-icon/TrashIcon.js","components/chat-title/ChatTitle.js","components/message/Message.js","components/controls/buttons/FormButton.js","components/controls/icons/attachment-icon/AttachmentIcon.js","components/modal.js","containers/shell/ChatShell.js","App.js","index.js"],"names":["initialState","conversations","selectedConversation","conversationsReducer","state","action","type","payload","newselectedConversation","find","conversation","_id","conversationId","newState","selectedConversationIndex","findIndex","c","splice","length","actionTypes","Object","freeze","PROCESS_ACTION","PROCESS_ACTION_FAILED","UPDATE_TOKEN","PROCESS_MESSAGE_ACTION","PROCESS_MESSAGE_ACTION_FAILED","CONVERSATIONS_LOADED","MESSAGES_REQUESTED","NEW_MESSAGE_ADDED","isLoading","messageDetails","messagesReducer","isUserLoggedIn","window","localStorage","getItem","email","fullName","token","userId","lastActiveAt","userRole","userReducer","data","setItem","clear","combineReducers","conversationState","messagesState","userState","Forget","style","width","height","backgroundColor","instance","axios","create","baseURL","interceptors","response","use","SignOutService","delete","HandleSignIn","res","dispatch","user","Login","useState","showPassword","setShowPassword","password","values","setValues","useDispatch","errEmail","errPassword","err","setErr","handleChange","prop","event","target","value","_onSignin","a","post","errCode","errMessage","onKeyDonw","e","keyCode","className","FormControl","sx","m","variant","InputLabel","htmlFor","OutlinedInput","id","onChange","label","onKeyDown","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","prev","onMouseDown","preventDefault","edge","VisibilityOff","Visibility","to","socket","userGetAllAdminOnline","get","headers","Authorization","catch","status","adminGetAllConversation","adminId","getDetailConversation","role","sendMessage","messagesRequested","SERVICES","refreshToken","newToken","toast","error","clearAll","messages","location","href","ConversationSearch","placeholder","Button","children","NoConversations","imageAdmin","imageUser","ConversationItem","isActive","onConversationItemSelected","classNames","useSelector","onChangeSelectedConversation","src","alt","moment","createdAt","startOf","fromNow","latestMessageText","ConversationList","conversationItems","map","conversationIsActive","key","LogOutButton","onLogout","TrashIcon","enableBackground","version","viewBox","xmlSpace","xmlns","xmlnsXlink","fill","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeWidth","x1","x2","y1","y2","d","points","ChatTitle","onDeleteConversation","title","Message","isMyMessage","message","messageClass","imageThumbnail","text","FormButton","disabled","AttachmentIcon","handleChooseFile","hidden","x","y","isMessageEmpty","textMessage","adjustTextMessage","trim","connect","userName","loadMessages","onMessageSubmitted","newMessageAdded","allMessages","prevMessage","prevLength","file","setState","disableButton","_onReloadMessages","useEffect","io","emit","roomId","alert","disconnect","off","on","handleFormSubmit","senderId","Date","_onChooseFile","attachment","files","fetch","then","arrayBuffer","fetchFile","console","log","index","onSubmit","name","CustomModal","props","toggle","modal","Modal","isOpen","zIndex","ModalHeader","ModalBody","ModalFooter","color","conversationChanged","loadConversations","loadConversation","HandleSignOut","setModal","App","exact","path","component","ChatShell","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","middleWare","thunk","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"sgBAAMA,EAAe,CACjBC,cAAe,GACfC,qBAAsB,IAG1BF,EAAaE,qBAAuBF,EAAaC,cAAc,GAE/D,IA+CeE,EA/Cc,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAC3D,OAAQA,EAAOC,MACX,IAAK,uBACD,OAAO,2BACAF,GADP,IAEIH,cAAeI,EAAOE,QAAQN,cAAgBI,EAAOE,QAAQN,cAAgB,GAC7EC,qBAAsBG,EAAOE,QAAQL,uBAE7C,IAAK,gCACD,IAAIM,EACAJ,EAAMH,cAAcQ,MAChB,SAAAC,GAAY,OAAIA,EAAaC,MAAQN,EAAOO,kBAGpD,OAAO,2BACAR,GADP,IAEIF,qBAAsBM,IAG9B,IAAK,sBACD,GAAIJ,EAAMF,qBAAsB,CAC5B,IAAMW,EAAQ,eAAQT,GAElBU,EACAD,EAASZ,cAAcc,WAAU,SAAAC,GAAC,OAAIA,EAAEL,MAAQE,EAASX,qBAAqBS,OAalF,OAZAE,EAASZ,cAAcgB,OAAOH,EAA2B,GAErDD,EAASZ,cAAciB,OAAS,GAC5BJ,EAA4B,KAC1BA,EAGND,EAASX,qBAAuBW,EAASZ,cAAca,IAEvDD,EAASX,qBAAuB,KAG7BW,EAGX,OAAOT,EAEX,QACI,OAAOA,ICtCJe,EAZKC,OAAOC,OAAO,CAC9BC,eAAgB,iBAChBC,sBAAuB,wBACvBC,aAAc,eAEdC,uBAAwB,yBACxBC,8BAA+B,gCAC/BC,qBAAsB,uBACtBC,mBAAoB,qBACpBC,kBAAmB,sBCRjB7B,EAAe,CACjB8B,WAAW,EACXC,eAAgB,IA8BLC,EA3BS,WAAmC,IAAlC5B,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACtD,OAAQA,EAAOC,MACX,KAAKa,EAAYM,uBACb,OAAO,2BACArB,GADP,IAEI0B,WAAW,IAEnB,KAAKX,EAAYS,mBACb,OAAO,2BACAxB,GADP,IAEI2B,eAAgB1B,EAAOE,UAE/B,KAAKY,EAAYU,kBAKjB,KAAKV,EAAYO,8BACb,OAAO,2BACAtB,GADP,IAEI0B,WAAW,IAEnB,QACI,OAAO1B,IC3BbJ,EAAe,CACjBiC,iBAAkBC,OAAOC,aAAaC,QAAQ,kBAC9CC,MAAOH,OAAOC,aAAaC,QAAQ,UAAY,GAC/CE,SAAUJ,OAAOC,aAAaC,QAAQ,aAAe,GACrDG,MAAOL,OAAOC,aAAaC,QAAQ,UAAY,GAC/CI,OAAQN,OAAOC,aAAaC,QAAQ,WAAa,GACjDK,aAAcP,OAAOC,aAAaC,QAAQ,iBAAmB,GAC7DM,SAAUR,OAAOC,aAAaC,QAAQ,aAAe,IAmD1CO,EAhDK,WAAmC,IAAlCvC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAClD,OAAQA,EAAOC,MACX,IAAK,gBACD,OAAID,EAAOuC,MACPV,OAAOC,aAAaU,QAAQ,kBAAkB,GAC9CX,OAAOC,aAAaU,QAAQ,QAASxC,EAAOuC,KAAKP,OACjDH,OAAOC,aAAaU,QAAQ,WAAYxC,EAAOuC,KAAKN,UACpDJ,OAAOC,aAAaU,QAAQ,QAASxC,EAAOuC,KAAKL,OACjDL,OAAOC,aAAaU,QAAQ,SAAUxC,EAAOuC,KAAKJ,QAClDN,OAAOC,aAAaU,QAAQ,eAAgBxC,EAAOuC,KAAKH,cACxDP,OAAOC,aAAaU,QAAQ,WAAYxC,EAAOuC,KAAKF,UAC7C,2BACAtC,GADP,IAEIiC,MAAOhC,EAAOuC,KAAKP,OAAS,GAC5BE,MAAOlC,EAAOuC,KAAKL,OAAS,GAC5BN,gBAAgB,EAChBK,SAAUjC,EAAOuC,KAAKN,UAAY,GAClCG,aAAcpC,EAAOuC,KAAKH,cAAgB,GAC1CD,OAAQnC,EAAOuC,KAAKJ,QAAU,GAC9BE,SAAUrC,EAAOuC,KAAKF,UAAY,MAGnC,GACX,KAAKvB,EAAYK,aAEb,OADAU,OAAOC,aAAaU,QAAQ,QAASxC,EAAOkC,OACrC,2BACAnC,GADP,IAEImC,MAAOlC,EAAOkC,QAGtB,IAAK,aAED,OADAL,OAAOC,aAAaW,QACb,2BACA1C,GADP,IAEI6B,gBAAgB,EAChBI,MAAO,GACPE,MAAO,GACPD,SAAU,GACVG,aAAc,GACdD,OAAQ,GACRE,SAAU,KAGlB,QACI,OAAOtC,IClDJ2C,cAAgB,CAC7BC,oBACAC,gBACAC,c,gBCPK,SAASC,IACZ,OACI,yBAAKC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,gBAAiB,SAAxD,U,sICFFC,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAS,4CAGbH,EAASI,aAAaC,SAASC,KAC3B,SAACD,GAGG,OADiBA,EAATjB,QAKDY,QCZTO,EAAiB,SAACvB,GACpB,OAAOiB,EAAMO,OAAO,YAAa,CAAEpB,KAAM,CAAEJ,OAAQA,MCDjDyB,EAAe,SAACC,GAAD,OAAS,SAACC,GAC3BA,EAAS,CACL7D,KAAM,gBACNsC,KAAM,CACFP,MAAO6B,EAAIE,KAAK/B,MAChBE,MAAO2B,EAAI3B,MACXD,SAAU4B,EAAIE,KAAK9B,SACnBG,aAAcyB,EAAIE,KAAK3B,aACvBD,OAAQ0B,EAAIE,KAAKzD,IACjB+B,SAAUwB,EAAIE,KAAK1B,cCKxB,SAAS2B,IACZ,MAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA4BF,mBAAS,CACjCjC,MAAO,GACPoC,SAAU,KAFd,mBAAOC,EAAP,KAAeC,EAAf,KAKMR,EAAWS,cAEjB,EAAsBN,mBAAS,CAC3BO,SAAU,GACVC,YAAa,KAFjB,mBAAOC,EAAP,KAAYC,EAAZ,KAaMC,EAAe,SAACC,GAAD,OAAU,SAACC,GAC5BR,EAAU,2BAAKD,GAAN,kBAAeQ,EAAOC,EAAMC,OAAOC,WAgB1CC,EAAS,uCAAG,4BAAAC,EAAA,yDACdP,EAAO,CACHH,SAAU,GACVC,YAAa,KAfZJ,EAAOrC,QAIPqC,EAAOD,WACRO,EAAO,2BAAKD,GAAN,IAAWD,YAAa,6BACvB,IALPE,EAAO,2BAAKD,GAAN,IAAWF,SAAU,0BACpB,GAUG,iEFjDCjC,EE2DqB,CAC5BP,MAAOqC,EAAOrC,MACdoC,SAAUC,EAAOD,UF5DtBhB,EAAM+B,KAAK,WAAY5C,GEgDZ,QAUJsB,EAVI,SAeiB,IAAhBA,EAAIuB,QACXtB,EAASF,EAAaC,EAAItB,QAEN,IAAhBsB,EAAIuB,SACJT,EAAO,CACHF,YAAa,GACbD,SAAUX,EAAIwB,aAGF,IAAhBxB,EAAIuB,SACJT,EAAO,CACHU,WAAY,GACZZ,YAAaZ,EAAIwB,cA3BnB,kCFjDA,IAAC9C,IEiDD,OAAH,qDAkCT+C,EAAY,SAACC,GACE,KAAdA,EAAEC,SACDP,KAKR,OACI,yBAAKQ,UAAU,aACX,yBAAKA,UAAU,OACf,yBAAKA,UAAU,QACf,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,SAAd,SAEA,yBAAKA,UAAU,cACX,kBAACC,EAAA,EAAD,CACID,UAAU,eACVE,GAAI,CACAC,EAAG,EACH5C,MAAO,QACR6C,QAAQ,YACX,kBAACC,EAAA,EAAD,CACIC,QAAQ,+BADZ,cAGA,kBAACC,EAAA,EAAD,CACIP,UAAU,aACVQ,GAAG,8BACHjB,MAAOX,EAAOrC,MACdkE,SAAUtB,EAAa,SACvBuB,MAAM,oBACNC,UAAWd,KAGnB,2BAAOG,UAAU,OAAOf,EAAIF,UAE5B,kBAACkB,EAAA,EAAD,CACID,UAAU,eACVE,GAAI,CACAC,EAAG,EACH5C,MAAO,QACR6C,QAAQ,YACX,kBAACC,EAAA,EAAD,CACIC,QAAQ,+BADZ,iBAGA,kBAACC,EAAA,EAAD,CACIP,UAAU,aACVQ,GAAG,8BACHhG,KAAMiE,EAAe,OAAS,WAC9Bc,MAAOX,EAAOD,SACd8B,SAAUtB,EAAa,YACvBuB,MAAM,2BACNC,UAAWd,EACXe,aACI,kBAACC,EAAA,EAAD,CAAgBC,SAAS,OACrB,kBAACC,EAAA,EAAD,CACIC,aAAW,6BACXC,QApHJ,WAC5BvC,GAAgB,SAAAwC,GAAI,OAAKA,MAoHOC,YAjHJ,SAAC9B,GAC7BA,EAAM+B,kBAiH0BC,KAAK,OAEJ5C,EAAe,kBAAC6C,EAAA,EAAD,MAAoB,kBAACC,EAAA,EAAD,WAMxD,2BAAOvB,UAAU,OAAOf,EAAID,aAE5B,uBAAGgB,UAAU,QAAb,6BACA,kBAAC,IAAD,CACIA,UAAU,SACVI,QAAQ,YACRa,QAAS,kBAAMzB,KACflC,MAAO,CAAEG,gBAAiB,YAJ9B,WAMA,uBAAGuC,UAAU,UAAb,kBACA,yBAAKA,UAAU,eACX,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,aAGnB,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAAMwB,GAAG,oBAAT,4BC1KxB,ICeIC,EDfEC,EAAwB,SAAChF,EAAQD,GACnC,OAAOkB,EAAMgE,IAAN,6CAAgDjF,GAAU,CAC7DkF,QAAS,CAAEC,cAAc,UAAD,OAAYpF,MACrCqF,OAAM,SAAAhC,GACL,OAAOA,EAAE/B,UAAY+B,EAAE/B,SAASgE,WAIlCC,EAA0B,SAACC,EAASxF,GACtC,OAAOkB,EAAMgE,IAAN,0CAA6CM,GAAW,CAC3DL,QAAS,CAAEC,cAAc,UAAD,OAAYpF,MACrCqF,OAAM,SAAAhC,GACL,OAAOA,EAAE/B,UAAY+B,EAAE/B,SAASgE,WAIlCG,EAAwB,SAAC1B,EAAI/D,EAAO0F,GACtC,OAAOxE,EAAMgE,IAAN,mCAAsCnB,EAAtC,iBAAiD2B,GAAQ,CAC5DP,QAAS,CAAEC,cAAc,UAAD,OAAYpF,MACrCqF,OAAM,SAAAhC,GACL,OAAOA,EAAE/B,UAAY+B,EAAE/B,SAASgE,WAIlCK,EAAc,SAACtF,GACjB,OAAOa,EAAM+B,KAAN,oBAAgC5C,EAAM,CACzC8E,QAAS,CAAEC,cAAc,UAAD,OAAY/E,EAAKL,UAC1CqF,OAAM,SAAAhC,GACL,OAAOA,EAAE/B,UAAY+B,EAAE/B,SAASgE,W,QEgE3BM,EAAoB,SAACvF,GAAD,8CAAU,WAAOuB,GAAP,yBAAAoB,EAAA,6DAC/B3E,EAAwCgC,EAAxChC,eAAgB2B,EAAwBK,EAAxBL,MAAO0F,EAAiBrF,EAAjBqF,KAAMzF,EAAWI,EAAXJ,OACrC2B,EAAS,CACL7D,KAAMa,EAAYM,yBAHiB,SAKvB2G,EAA+BxH,EAAgB2B,EAAO0F,GAL/B,YAKnC/D,EALmC,4BAOvB,MAARA,EAP+B,iCASVmE,EAAa7F,EAAQD,GATX,QAS3B+F,EAT2B,SAW3BC,IAAMC,MAAM,uCACZrE,EAAS,CACL7D,KAAMa,EAAYK,aAClBe,MAAO+F,KAKXG,IAnB2B,wBAoBhB,MAARvE,EAEPuE,IAEAtE,EAAS,CACL7D,KAAMa,EAAYS,mBAClBrB,QAAyB,IAAhB2D,EAAIuB,QAAgBvB,EAAItB,KAAK8F,SAAW,KA1BtB,gCA8BnCvE,EAAS,CACL7D,KAAMa,EAAYO,gCA/Ba,4CAAV,uDAmC3B2G,EAAY,uCAAG,WAAO7F,EAAQD,GAAf,eAAAgD,EAAA,sEF/FH3C,EEgGoB,CAC9BJ,OAAQA,EACRD,MAAOA,GFjGJkB,EAAM+B,KAAK,iBAAkB5C,EAAM,CACtC8E,QAAS,CAAEC,cAAc,UAAD,OAAY/E,EAAKL,UAC1CqF,OAAM,SAAAhC,GACL,OAAOA,EAAE/B,UAAY+B,EAAE/B,SAASgE,UE2FnB,UAKL,OAJR3D,EADa,+BAMbuE,IANa,kBAON,MAPM,gCASVvE,EAAI3B,OATM,iCF/FJ,IAACK,IE+FG,OAAH,wDAYZ6F,EAAW,WACbvG,OAAOC,aAAaW,QACpBZ,OAAOyG,SAASC,KAAO,UClIZC,G,OAVY,SAAC,GAAuB,IAArB5I,EAAoB,EAApBA,cAC1B,EAAsCqE,mBAAS,IAA/C,6BAEA,OACI,yBAAKgC,GAAG,oBACHrG,GAAiBA,EAAciB,OAAS,GAAK,2BAAOZ,KAAK,OAAOwI,YAAY,cCI1EC,G,MARA,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACb,OACI,oCACI,4BAAQlD,UAAU,kBAAmBkD,MCalCC,G,OAdS,WACpB,OACI,yBAAK3C,GAAG,yBACJ,yBAAKA,GAAG,2BACJ,mDACA,4EACA,kEACA,+GACA,kBAAC,EAAD,sB,kBCdH4C,I,OAAa,oFACbC,GAAU,sG,oBC4CRC,GAnCU,SAAC,GAA4D,IAA1D1I,EAAyD,EAAzDA,aAAc2I,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,2BAC1CxD,EAAYyD,KAAW,eAAgB,CACzC,OAAUF,IAGd,EAAoCG,aAAY,SAAApJ,GAAK,OAAIA,EAAM8C,aAAvDR,EAAR,EAAQA,SAAUH,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,OACnB2B,EAAWS,cAEX6E,EAA4B,uCAAG,sBAAAlE,EAAA,sEAC3B+D,EAA2B,CAC7B1I,eAAgBF,EAAaC,IAC7B4B,MAAOA,EACP0F,KAAMvF,EACNF,OAAQA,IALqB,uBAO3B2B,EAASgE,EAAkB,CAC7BvH,eAAgBF,EAAaC,IAC7B4B,MAAOA,EACP0F,KAAMvF,EACNF,OAAQA,KAXqB,2CAAH,qDAelC,OACI,yBAAKsD,UAAWA,EAAWiB,QAAS0C,GAChC,yBAAKC,IAAgB,OAAXhH,EAAkBwG,GAAaC,GAAYQ,IAAI,aACzD,yBAAK7D,UAAU,cAAcpF,EAAa8B,OAAOF,UAAY5B,EAAaqH,QAAQzF,UAClF,yBAAKwD,UAAU,gBAAgB8D,KAAOlJ,EAAamJ,WAAWC,QAAQ,QAAQC,WAC9E,yBAAKjE,UAAU,wBACVpF,EAAasJ,kBAAoBtJ,EAAasJ,kBAAoB,cChBpEC,I,OAlBU,SAAC,GAAyE,IAAvEhK,EAAsE,EAAtEA,cAAeC,EAAuD,EAAvDA,qBAAsBoJ,EAAiC,EAAjCA,2BACvDY,EAAoBjK,EAAckK,KAAI,SAACzJ,GACzC,IAAM0J,EAAuBlK,GAAwBQ,EAAaC,MAAQT,EAAqBS,IAE/F,OAAO,kBAAC,GAAD,CACH0J,IAAK3J,EAAaC,IAClB2I,2BAA4BA,EAC5BD,SAAUe,EACV1J,aAAcA,OAGtB,OACI,yBAAK4F,GAAG,qBACH4D,KCAEI,I,OAbM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEZ/H,EAAWgH,aAAY,SAAApJ,GAAK,OAAIA,EAAM8C,aAAtCV,OAER,OACI,yBAAK8D,GAAG,yBACJ,4BAAQS,QAAS,kBAAMwD,EAAS/H,KAC5B,yBAAKkH,IAAI,+DAA+DC,IAAI,eCuB7Ea,I,OA/BG,WACd,OACI,yBAAK1E,UAAU,aAAa2E,iBAAiB,kBAAkBC,QAAQ,MAAMC,QAAQ,cAAcC,SAAS,WAAWC,MAAM,6BAA6BC,WAAW,gCACjK,2BACI,0BAAMC,KAAK,OAAOC,cAAc,QAAQC,eAAe,QAAQC,iBAAiB,SAASC,YAAY,KAAKC,GAAG,UAAUC,GAAG,UAAUC,GAAG,UAAUC,GAAG,YACpJ,0BAAMC,EAAE,wDAAwDT,KAAK,OAAOC,cAAc,QAAQC,eAAe,QAAQC,iBAAiB,SAASC,YAAY,OAC/J,0BAAMJ,KAAK,OAAOC,cAAc,QAAQC,eAAe,QAAQC,iBAAiB,SAASC,YAAY,KAAKC,GAAG,UAAUC,GAAG,UAAUC,GAAG,UAAUC,GAAG,YACpJ,0BAAMC,EAAE,0DAA0DT,KAAK,OAAOC,cAAc,QAAQC,eAAe,QAAQC,iBAAiB,SAASC,YAAY,OACjK,8BAAUJ,KAAK,OAAOU,OAAO,uDAAuDT,cAAc,QAAQC,eAAe,QAAQC,iBAAiB,SAASC,YAAY,OACvK,0BAAMK,EAAE,0DAA0DT,KAAK,OAAOC,cAAc,QAAQC,eAAe,QAAQC,iBAAiB,SAASC,YAAY,OACjK,0BAAMJ,KAAK,OAAOC,cAAc,QAAQC,eAAe,QAAQC,iBAAiB,SAASC,YAAY,KAAKC,GAAG,UAAUC,GAAG,SAASC,GAAG,UAAUC,GAAG,YACnJ,0BAAMC,EAAE,0DAA0DT,KAAK,OAAOC,cAAc,QAAQC,eAAe,QAAQC,iBAAiB,SAASC,YAAY,OACjK,0BAAMK,EAAE,wDAAwDT,KAAK,OAAOC,cAAc,QAAQC,eAAe,QAAQC,iBAAiB,SAASC,YAAY,OAC/J,0BAAMJ,KAAK,OAAOC,cAAc,QAAQC,eAAe,QAAQC,iBAAiB,SAASC,YAAY,KAAKC,GAAG,SAASC,GAAG,UAAUC,GAAG,SAASC,GAAG,WAClJ,0BAAMC,EAAE,wDAAwDT,KAAK,OAAOC,cAAc,QAAQC,eAAe,QAAQC,iBAAiB,SAASC,YAAY,OAC/J,0BAAMJ,KAAK,OAAOC,cAAc,QAAQC,eAAe,QAAQC,iBAAiB,SAASC,YAAY,KAAKC,GAAG,UAAUC,GAAG,UAAUC,GAAG,QAAQC,GAAG,WAClJ,0BAAMC,EAAE,yDAAyDT,KAAK,OAAOC,cAAc,QAAQC,eAAe,QAAQC,iBAAiB,SAASC,YAAY,OAChK,0BAAMJ,KAAK,OAAOC,cAAc,QAAQC,eAAe,QAAQC,iBAAiB,SAASC,YAAY,KAAKC,GAAG,UAAUC,GAAG,UAAUC,GAAG,SAASC,GAAG,WACnJ,0BAAMC,EAAE,0DAA0DT,KAAK,OAAOC,cAAc,QAAQC,eAAe,QAAQC,iBAAiB,SAASC,YAAY,OACjK,8BAAUJ,KAAK,OAAOU,OAAO,kDAAkDT,cAAc,QAAQC,eAAe,QAAQC,iBAAiB,SAASC,YAAY,QAEtK,2BACI,0BAAMJ,KAAK,OAAOC,cAAc,QAAQC,eAAe,QAAQC,iBAAiB,SAASC,YAAY,KAAKC,GAAG,UAAUC,GAAG,UAAUC,GAAG,UAAUC,GAAG,WACpJ,0BAAMR,KAAK,OAAOC,cAAc,QAAQC,eAAe,QAAQC,iBAAiB,SAASC,YAAY,KAAKC,GAAG,UAAUC,GAAG,UAAUC,GAAG,UAAUC,GAAG,WACpJ,0BAAMR,KAAK,OAAOC,cAAc,QAAQC,eAAe,QAAQC,iBAAiB,SAASC,YAAY,KAAKC,GAAG,UAAUC,GAAG,UAAUC,GAAG,UAAUC,GAAG,WACpJ,0BAAMR,KAAK,OAAOC,cAAc,QAAQC,eAAe,QAAQC,iBAAiB,SAASC,YAAY,KAAKC,GAAG,UAAUC,GAAG,UAAUC,GAAG,UAAUC,GAAG,eCPrJG,I,OAhBG,SAAC,GAAoD,IAAlDxL,EAAiD,EAAjDA,qBAAsByL,EAA2B,EAA3BA,qBAEvC,OACI,yBAAKrF,GAAG,cACHpG,GACG,oCACA,8BAAOA,EAAqB6H,QAAQzF,UACpC,yBAAKyE,QAAS,kBAAM4E,KAAwBC,MAAM,uBAC9C,kBAAC,GAAD,WCkBLC,I,OAzBC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QACtBC,EAAezC,KAAW,cAAe,CAC3C,cAAeuC,EACf,iBAAkBA,IAGdpJ,EAAa8G,aAAY,SAAApJ,GAAK,OAAIA,EAAM8C,aAAxCR,SAEFuJ,EAAiBH,EACjB,KACA,yBAAKpC,IAAgB,OAAXhH,EAAkBwG,GAAaC,GAAYQ,IAAK,aAEhE,OACI,yBAAK7D,UAAWkG,GACZ,yBAAKlG,UAAU,mBACVmG,EACD,yBAAKnG,UAAU,gBACViG,EAAQG,MAEb,yBAAKpG,UAAU,gBAAgB8D,KAAOmC,EAAQlC,WAAWC,QAAQ,UAAUC,eCX5EoC,I,OAXI,SAAC,GAA0B,IAAzBnD,EAAwB,EAAxBA,SAAUoD,EAAc,EAAdA,SAC3B,OACI,oCACI,4BACI9L,KAAK,SACLwF,UAAU,iBACVsG,SAAUA,GAAYpD,MC8BvBqD,I,OApCQ,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,iBACtB,OACI,oCACI,2BAAOhM,KAAK,OAAOgG,GAAG,OAAOiG,QAAM,EAAChG,SAAU+F,IAC9C,2BAAOlG,QAAQ,QACX,yBACIsE,QAAQ,MAAM5E,UAAU,kBAAkB+E,MAAM,6BAA6BC,WAAW,+BAA+B0B,EAAE,MAAMC,EAAE,MACjI9B,QAAQ,sBAAsBC,SAAS,YACvC,0BAAMY,EAAE,guBAOR,2BACI,0BAAMA,EAAE,+RAGR,0BAAMA,EAAE,2RAGR,0BAAMA,EAAE,8PAGR,0BAAMA,EAAE,8Q,qBbpB1BkB,GAAiB,SAACC,GACpB,OAAiD,IAA1CC,GAAkBD,GAAazL,QAGpC0L,GAAoB,SAACD,GACvB,OAAOA,EAAYE,QAkLRC,gBAjBS,SAAA1M,GACpB,MAAO,CACH2B,eAAgB3B,EAAM6C,cAAclB,eACpCS,OAAQpC,EAAM8C,UAAUV,OACxBE,SAAUtC,EAAM8C,UAAUR,SAC1BH,MAAOnC,EAAM8C,UAAUX,MACvBwK,SAAU3M,EAAM8C,UAAUZ,aAIP,SAAA6B,GACvB,MAAO,CACH6I,aAAc,SAACpK,GAAD,OAAUuB,EAASgE,EAAkBvF,KACnDqK,mBAAoB,SAACrK,GAAD,OAAUuB,EC/HP,SAACvB,GAAD,8CAAU,WAAOuB,GAAP,iBAAAoB,EAAA,6DACrCpB,EAAS,CACL7D,KAAMa,EAAYM,yBAFe,SAKrB2G,EAAqBxF,GALA,YAKjCsB,EALiC,4BAOrB,MAARA,EAP6B,iCAQRmE,EAAazF,EAAKJ,OAAQI,EAAKL,OARvB,QAQzB+F,EARyB,SAUzBC,IAAMC,MAAM,uCACZrE,EAAS,CACL7D,KAAMa,EAAYK,aAClBe,MAAO+F,KAKXG,IAlByB,wBAmBd,MAARvE,EAEPuE,IAEAtE,EAAS,CACL7D,KAAMa,EAAYU,oBAxBO,gCA4BjCsC,EAAS,CACL7D,KAAMa,EAAYO,gCA7BW,4CAAV,sDD+HgBwL,CAAgBtK,QAIhDkK,EA7KK,SAAC,GAUd,IATHlM,EASE,EATFA,eACAoM,EAQE,EARFA,aACAjL,EAOE,EAPFA,eACAkL,EAME,EANFA,mBACAlF,EAKE,EALFA,QACAvF,EAIE,EAJFA,OACAE,EAGE,EAHFA,SACAqK,EAEE,EAFFA,SACAxK,EACE,EADFA,MAEA,EAA0B+B,mBAAS,CAC/B6I,YAAa,GACbC,YAAa,KACbC,WAAY,EACZV,YAAa,GACbW,KAAM,OALV,mBAAOlN,EAAP,KAAcmN,EAAd,KASIJ,EAKA/M,EALA+M,YACAC,EAIAhN,EAJAgN,YACAC,EAGAjN,EAHAiN,WACAV,EAEAvM,EAFAuM,YACAW,EACAlN,EADAkN,KAGEE,EAAgBd,GAAeC,GAE/Bc,EAAiB,uCAAG,sBAAAlI,EAAA,sEAChByH,EAAa,CACfpM,eAAgBA,EAChB2B,MAAOA,EACP0F,KAAMvF,EACNF,OAAQA,IALU,OAQlBT,GAAkBA,EAAeb,OAAS,EAC1CqM,GAAS,SAAAvG,GAAI,kCACNA,GADM,IAET2F,YAAa,GACbW,KAAM,KACNH,YAAapL,EACbsL,WAAYtL,EAAeb,OAC3BkM,YAAarL,EAAeA,EAAeb,OAAS,GAAGP,SAG3D4M,GAAS,SAAAvG,GAAI,kCACNA,GADM,IAETqG,WAAY,EACZD,YAAa,KACbD,YAAa,QAtBC,2CAAH,qDA4BvBO,qBAAU,WACND,MACD,IAEHC,qBAAU,WAiBN,OAhBAnG,EAASoG,KAAG,4CAELC,KAAK,OAAQ,CAAEpL,OAAQA,EAAQuK,SAAUA,EAAUc,OAAQjN,GAAlE,uCAAoF,WAAOgF,GAAP,SAAAL,EAAA,yDAChFK,GAAKkI,MAAM,gBAAiBlI,KAExB7D,GACAA,EAAeb,OAAS,IAEpBa,EAAeA,EAAeb,OAAS,GAAGP,MAAQyM,GAC/CrL,EAAeb,SAAWmM,EAP2C,gCAUtEI,IAVsE,2CAApF,uDAcO,WACHlG,EAAOwG,aACPxG,EAAOyG,SAEZ,CAACP,IAEJC,qBAAU,WACNnG,EAAO0G,GAAG,iBAAV,sBAA4B,sBAAA1I,EAAA,sEAClBkI,IADkB,8CAG7B,CAACA,IAEJ,IAAMS,EAAgB,uCAAG,WAAOtI,GAAP,SAAAL,EAAA,yDACrBK,EAAEsB,iBACGwF,GAAeC,GAFC,gCAGXpF,EAAOqG,KAAK,cACd,CAAEC,OAAQjN,EAAgBuN,SAAU3L,GADlC,uCAEF,WAAO2L,GAAP,SAAA5I,EAAA,sEACU0H,EAAmB,CACrBtM,IAAKC,EACLsL,KAAMS,EACNwB,SAAU3L,EACVA,OAAQA,EACRqH,UAAW,IAAIuE,KACf7L,MAAOA,EACPwF,QAASA,EAAQpH,MARzB,UAWQwN,IAAa3L,EAXrB,gCAYciL,IAZd,2CAFE,uDAHW,2CAAH,sDAsBhBY,EAAa,uCAAG,WAAOzI,GAAP,iBAAAL,EAAA,6DACd+I,EAAa1I,EAAER,OAAOmJ,MAAM,GAChChB,GAAS,SAAAvG,GAAI,kCAAUA,GAAV,IAAgBsG,KAAMgB,OAFjB,SAIME,MAAMlB,GAAMmB,MAAK,SAAAvK,GAAG,OAAIA,EAAIwK,iBAJlC,OAIZC,EAJY,OAKlBC,QAAQC,IAAIF,GALM,2CAAH,sDAgBnB,OACI,oCACI,yBAAKrI,GAAG,qBACH6G,EAAYjM,OAAS,EAAIiM,EAAYhD,KAAI,SAAC4B,EAAS+C,GAChD,OAAO,kBAAC,GAAD,CACHzE,IAAKyE,EACLhD,YAAaC,EAAQoC,WAAa3L,EAClCuJ,QAASA,OAEb,sCAGR,0BAAMzF,GAAG,YAAYyI,SAAUb,GAC3B,yBAAKtC,MAAM,kBACP,kBAAC,GAAD,CAAgBU,iBAAkB+B,KAEtC,2BACI/N,KAAK,OACLwI,YAAY,iBACZzD,MAAOsH,EACPqC,KAAK,cACLzI,SA7BW,SAACX,GACxB,MAAwBA,EAAER,OAAlBC,EAAR,EAAQA,MAAO2J,EAAf,EAAeA,KACfzB,GAAS,SAAAvG,GAAI,kCACNA,GADM,kBAERgI,EAAO3J,UA0BJ,kBAAC,GAAD,CAAY+G,SAAUoB,GAAtB,a,kDc9IDyB,GAvBK,SAACC,GACnB,IACEC,EAEED,EAFFC,OACAC,EACEF,EADFE,MAGF,OACI,kBAACC,GAAA,EAAD,CAAOC,OAAQF,EAAOD,OAAQA,EAAQ/L,MAAO,CAACmM,OAAQ,MACpD,kBAACC,GAAA,EAAD,CAAaL,OAAQA,GAArB,uCACA,kBAACM,GAAA,EAAD,KACI,6EACA,qEACA,yFACA,0EACA,iDAEJ,kBAACC,GAAA,EAAD,KACE,kBAAC,KAAD,CAAQC,MAAM,UAAU5I,QAASoI,GAAjC,eCiEKrC,I,OAAAA,aAjBS,SAAA1M,GACpB,MAAO,CACHH,cAAeG,EAAM4C,kBAAkB/C,cACvCC,qBAAsBE,EAAM4C,kBAAkB9C,qBAC9CwC,SAAUtC,EAAM8C,UAAUR,SAC1BH,MAAOnC,EAAM8C,UAAUX,MACvBC,OAAQpC,EAAM8C,UAAUV,WAIL,SAAA2B,GAAQ,MAAK,CACpCyL,oBAAqB,SAAChN,GAAD,OAAUuB,EdnCA,SAACvB,GAAD,8CAAU,WAAOuB,GAAP,SAAAoB,EAAA,sDACzCpB,EAASgE,EAAkBvF,IAC3BuB,EAAS,CACL7D,KAAM,gCACNM,eAAgBgC,EAAKhC,iBAJgB,2CAAV,sDcmCSgP,CAAoBhN,KAC5D+I,qBAAsB,kBAAMxH,EdxBU,CACtC7D,KAAM,yBcwBNuP,kBAAmB,SAACrN,EAAQE,EAAUH,GAAnB,OAA6B4B,Ed9EpB,SAAC3B,EAAQE,EAAUH,GAAnB,8CAA6B,WAAO4B,GAAP,iBAAAoB,EAAA,yDACzDpB,EAAS,CACL7D,KAAMa,EAAYM,yBAGlByC,EAAM,GACO,OAAbxB,EANqD,gCAOzC0F,EAA+B5F,EAAQD,GAPE,OAOrD2B,EAPqD,+CASzCkE,EAAiC5F,EAAQD,GATA,QASrD2B,EATqD,mBAUrDA,EAVqD,oBAWzC,MAARA,EAXiD,kCAY5BmE,EAAa7F,EAAQD,GAZO,SAY7C+F,EAZ6C,SAc7CC,IAAMC,MAAM,uCACZrE,EAAS,CACL7D,KAAMa,EAAYK,aAClBe,MAAO+F,KAKXG,IAtB6C,wBAuBlC,MAARvE,EAEPuE,IAEAtE,EAAS,CACL7D,KAAMa,EAAYQ,qBAClBpB,QAAS,CACLN,cAAeiE,EAAItB,MAAQsB,EAAItB,KAC/B1C,qBAAsBgE,EAAItB,MAAQsB,EAAItB,KAAK,MA/BF,gCAoCrDuB,EAAS,CACL7D,KAAMa,EAAYO,gCArC+B,4CAA7B,sDc8E6BoO,CAAiBtN,EAAQE,EAAUH,KAC5FgI,SAAU,SAAC/H,GAAD,OAAY2B,ElBnEJ,SAAC3B,GACnB,8CAAO,WAAO2B,GAAP,SAAAoB,EAAA,sEACGxB,EAAevB,GADlB,OAGH2B,EAAS,CACL7D,KAAM,eAJP,2CAAP,sDkBkE+ByP,CAAcvN,QAGlCsK,EAnEG,SAAC,GAUZ,IATH7M,EASE,EATFA,cACAC,EAQE,EARFA,qBACA0P,EAOE,EAPFA,oBACAjE,EAME,EANFA,qBACAkE,EAKE,EALFA,kBACAtF,EAIE,EAJFA,SACA7H,EAGE,EAHFA,SACAF,EAEE,EAFFA,OACAD,EACE,EADFA,MAEAmL,qBAAU,WACNmC,EAAkBrN,EAAQE,EAAUH,KACrC,CAACsN,IAEJ,MAA0BvL,oBAAS,GAAnC,mBAAO8K,EAAP,KAAcY,EAAd,KAIA,OACI,oCACA,yBAAK1J,GAAG,kBACJ,kBAAC,EAAD,CAAoBrG,cAAeA,IACnC,kBAAC,GAAD,CACIqJ,2BAA4BsG,EAC5B3P,cAAeA,EACfC,qBAAsBA,IAC1B,kBAAC,GAAD,CACIqK,SAAUA,IAEd,kBAAC,GAAD,CACIrK,qBAAsBA,EACtByL,qBAAsBA,IAGtB1L,EAAciB,OAAS,EACnB,kBAAC,GAAD,CACIN,eAAgBV,EAAqBS,IACrCoH,QAAS7H,EAAqB6H,UAGlC,kBAAC,EAAD,OAIZ,kBAAC,GAAD,CAAaoH,OA5BF,kBAAMa,GAAUZ,IA4BEA,MAAOA,SC3B7Ba,I,cA5BH,WACV,IAAQhO,EAAmBuH,aAAY,SAAApJ,GAAK,OAAIA,EAAM8C,aAA9CjB,eACR,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiO,OAAK,EAACC,KAAK,IAAIC,UAAWC,KACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASC,UAAW/L,IACtC,kBAAC,IAAD,CAAO6L,OAAK,EAACC,KAAK,kBAAkBC,UAAWjN,KAEjD,kBAAC,IAAD,CAAUmE,GAAIrF,EAAiB,IAAM,YAEvC,kBAAC,IAAD,CACE2E,SAAS,YACT0J,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,EACZC,MAAM,YCpBRC,GAAa,CAACC,KAEdC,GAAQC,YACZC,EACAC,IAAe,WAAf,EAAmBL,KAGrBM,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,IACf,kBAAC,GAAD,OAEFM,SAASC,eAAe,U","file":"static/js/main.03d6ff7b.chunk.js","sourcesContent":["const initialState = {\n    conversations: [],\n    selectedConversation: {}\n};\n\ninitialState.selectedConversation = initialState.conversations[1];\n\nconst conversationsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'CONVERSATIONS_LOADED':\n            return {\n                ...state,\n                conversations: action.payload.conversations ? action.payload.conversations : [],\n                selectedConversation: action.payload.selectedConversation\n            };\n        case 'SELECTED_CONVERSATION_CHANGED':\n            let newselectedConversation =\n                state.conversations.find(\n                    conversation => conversation._id === action.conversationId\n                );\n\n            return {\n                ...state,\n                selectedConversation: newselectedConversation\n            };\n\n        case 'DELETE_CONVERSATION': {\n            if (state.selectedConversation) {\n                const newState = { ...state };\n\n                let selectedConversationIndex =\n                    newState.conversations.findIndex(c => c._id === newState.selectedConversation._id);\n                newState.conversations.splice(selectedConversationIndex, 1);\n\n                if (newState.conversations.length > 0) {\n                    if (selectedConversationIndex > 0) {\n                        --selectedConversationIndex;\n                    }\n\n                    newState.selectedConversation = newState.conversations[selectedConversationIndex];\n                } else {\n                    newState.selectedConversation = null;\n                }\n\n                return newState;\n            }\n\n            return state;\n        }\n        default:\n            return state;\n    }\n}\n\nexport default conversationsReducer;","const actionTypes = Object.freeze({\r\n    PROCESS_ACTION: \"PROCESS_ACTION\",\r\n    PROCESS_ACTION_FAILED: \"PROCESS_ACTION_FAILED\",\r\n    UPDATE_TOKEN: \"UPDATE_TOKEN\",\r\n\r\n    PROCESS_MESSAGE_ACTION: \"PROCESS_MESSAGE_ACTION\",\r\n    PROCESS_MESSAGE_ACTION_FAILED: \"PROCESS_MESSAGE_ACTION_FAILED\",\r\n    CONVERSATIONS_LOADED: \"CONVERSATIONS_LOADED\",\r\n    MESSAGES_REQUESTED: \"MESSAGES_REQUESTED\",\r\n    NEW_MESSAGE_ADDED: \"NEW_MESSAGE_ADDED\"\r\n\r\n})\r\nexport default actionTypes","import actionTypes from '../actions/actionTypes'\nconst initialState = {\n    isLoading: false,\n    messageDetails: []\n}\n\nconst messagesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.PROCESS_MESSAGE_ACTION:\n            return {\n                ...state,\n                isLoading: true\n            }\n        case actionTypes.MESSAGES_REQUESTED:\n            return {\n                ...state,\n                messageDetails: action.payload\n            }\n        case actionTypes.NEW_MESSAGE_ADDED: \n            return {\n                ...state,\n                isLoading: false\n            }\n        case actionTypes.PROCESS_MESSAGE_ACTION_FAILED:\n            return {\n                ...state,\n                isLoading: false\n            }\n        default:\n            return state;\n    }\n}\n\nexport default messagesReducer;","import actionTypes from \"../actions/actionTypes\"\r\n\r\nconst initialState = {\r\n    isUserLoggedIn: !!window.localStorage.getItem('isUserLoggedIn'),\r\n    email: window.localStorage.getItem('email') || '',\r\n    fullName: window.localStorage.getItem('fullName') || '',\r\n    token: window.localStorage.getItem('token') || '',\r\n    userId: window.localStorage.getItem('userId') || '',\r\n    lastActiveAt: window.localStorage.getItem('lastActiveAt') || '',\r\n    userRole: window.localStorage.getItem('userRole') || ''\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"LOGIN_SUCCESS\":\r\n            if (action.data) {\r\n                window.localStorage.setItem('isUserLoggedIn', true)\r\n                window.localStorage.setItem('email', action.data.email)\r\n                window.localStorage.setItem('fullName', action.data.fullName)\r\n                window.localStorage.setItem('token', action.data.token)\r\n                window.localStorage.setItem('userId', action.data.userId)\r\n                window.localStorage.setItem('lastActiveAt', action.data.lastActiveAt)\r\n                window.localStorage.setItem('userRole', action.data.userRole)\r\n                return {\r\n                    ...state,\r\n                    email: action.data.email || '',\r\n                    token: action.data.token || '',\r\n                    isUserLoggedIn: true,\r\n                    fullName: action.data.fullName || '',\r\n                    lastActiveAt: action.data.lastActiveAt || '',\r\n                    userId: action.data.userId || '',\r\n                    userRole: action.data.userRole || ''\r\n                }\r\n            }\r\n            return {}\r\n        case actionTypes.UPDATE_TOKEN: {\r\n            window.localStorage.setItem('token', action.token)\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        }\r\n        case 'USER_RESET': {\r\n            window.localStorage.clear();\r\n            return {\r\n                ...state,\r\n                isUserLoggedIn: false,\r\n                email: '',\r\n                token: '',\r\n                fullName: '',\r\n                lastActiveAt: '',\r\n                userId: '',\r\n                userRole: ''\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import { combineReducers } from 'redux';\n\nimport conversationState from './conversations';\nimport messagesState from './messages';\nimport userState from './user';\n\nexport default combineReducers({\n  conversationState,\n  messagesState,\n  userState\n});","import React from 'react'\r\n\r\nexport function Forget() {\r\n    return (\r\n        <div style={{ width: 100, height: 100, backgroundColor: \"#000\" }}>\r\n\r\n            Forget\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://daisycare-support.herokuapp.com\"\r\n});\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n        // Thrown error for request with OK status code\r\n        const { data } = response;\r\n        return data;\r\n    }\r\n);\r\n\r\nexport default instance;","import axios from \"./axios\"\r\n\r\nconst SignOutService = (userId) => {\r\n    return axios.delete('/sign-out', { data: { userId: userId } })\r\n}\r\n\r\nconst SignInService = (data) => {\r\n    return axios.post(\"/sign-in\", data)\r\n}\r\n\r\nexport { SignOutService, SignInService }","import { SignOutService } from \"../../services/userService\"\r\n\r\nconst HandleSignIn = (res) => (dispatch) => {\r\n    dispatch({\r\n        type: \"LOGIN_SUCCESS\",\r\n        data: {\r\n            email: res.user.email,\r\n            token: res.token,\r\n            fullName: res.user.fullName,\r\n            lastActiveAt: res.user.lastActiveAt,\r\n            userId: res.user._id,\r\n            userRole: res.user.userRole\r\n        }\r\n    })\r\n}\r\n\r\nconst HandleSignOut = (userId) => {\r\n    return async (dispatch) => {\r\n        await SignOutService(userId)\r\n\r\n        dispatch({\r\n            type: 'USER_RESET'\r\n        })\r\n    }\r\n}\r\n\r\nexport {\r\n    HandleSignIn,\r\n    HandleSignOut\r\n}","import React, { useState } from 'react'\r\nimport './styles.scss'\r\nimport {\r\n    FormControl,\r\n    OutlinedInput,\r\n    InputLabel,\r\n    InputAdornment,\r\n    IconButton,\r\n    Button\r\n} from '@mui/material';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport { Link } from 'react-router-dom';\r\nimport { SignInService } from '../../services/userService';\r\nimport { useDispatch } from 'react-redux';\r\nimport { HandleSignIn } from '../../store/actions/userAction';\r\n\r\nexport function Login() {\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const [values, setValues] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [err, setErr] = useState({\r\n        errEmail: '',\r\n        errPassword: ''\r\n    })\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(prev => !prev);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const validateInfo = () => {\r\n        if (!values.email) {\r\n            setErr({ ...err, errEmail: \"Email is not valid!\" })\r\n            return false\r\n        }\r\n        if (!values.password) {\r\n            setErr({ ...err, errPassword: \"Password is not valid!\" })\r\n            return false\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    const _onSignin = async () => {\r\n        setErr({\r\n            errEmail: '',\r\n            errPassword: ''\r\n        })\r\n\r\n        let isValid = validateInfo()\r\n        if (!isValid)\r\n            return;\r\n        else {\r\n            const res = await SignInService({\r\n                email: values.email,\r\n                password: values.password\r\n            })\r\n\r\n            if (res && res.errCode === 0) {\r\n                dispatch(HandleSignIn(res.data))\r\n            } else {\r\n                if (res.errCode === 2) {\r\n                    setErr({\r\n                        errPassword: \"\",\r\n                        errEmail: res.errMessage,\r\n                    })\r\n                }\r\n                if (res.errCode === 3) {\r\n                    setErr({\r\n                        errMessage: \"\",\r\n                        errPassword: res.errMessage\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const onKeyDonw = (e) => {\r\n        if(e.keyCode === 13)\r\n            _onSignin()\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className='bg' />\r\n            <div className='bg2' />\r\n            <div className=\"content-left\" />\r\n            <div className=\"content-right\">\r\n                <h3 className=\"title\">Login</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <FormControl\r\n                        className=\"form-control\"\r\n                        sx={{\r\n                            m: 1,\r\n                            width: '100%'\r\n                        }} variant=\"outlined\">\r\n                        <InputLabel\r\n                            htmlFor=\"outlined-adornment-password\"\r\n                        >Your email</InputLabel>\r\n                        <OutlinedInput\r\n                            className=\"placholder\"\r\n                            id=\"outlined-adornment-password\"\r\n                            value={values.email}\r\n                            onChange={handleChange('email')}\r\n                            label=\"Yourasdasdsadsdaa\"\r\n                            onKeyDown={onKeyDonw}\r\n                        />\r\n                    </FormControl>\r\n                    <label className=\"err\">{err.errEmail}</label>\r\n\r\n                    <FormControl\r\n                        className=\"form-control\"\r\n                        sx={{\r\n                            m: 1,\r\n                            width: '100%'\r\n                        }} variant=\"outlined\">\r\n                        <InputLabel\r\n                            htmlFor=\"outlined-adornment-password\"\r\n                        >Your password</InputLabel>\r\n                        <OutlinedInput\r\n                            className=\"placholder\"\r\n                            id=\"outlined-adornment-password\"\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            value={values.password}\r\n                            onChange={handleChange('password')}\r\n                            label=\"TypefdgfgfgYour password\"\r\n                            onKeyDown={onKeyDonw}\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                    <label className=\"err\">{err.errPassword}</label>\r\n                    \r\n                    <p className='hint'>*  Use Daisy Care account</p>\r\n                    <Button\r\n                        className=\"button\"\r\n                        variant=\"contained\"\r\n                        onClick={() => _onSignin()}\r\n                        style={{ backgroundColor: \"#000333\" }}\r\n                    >Sign in</Button>\r\n                    <p className=\"mobile\">Try on mobile?</p>\r\n                    <div className=\"other-media\">\r\n                        <div className=\"android-app\" />\r\n                        <div className=\"ios-app\" />\r\n                    </div>\r\n\r\n                    <div className=\"forget\">\r\n                        <Link to=\"/forgot-password\">Forgot your password</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import axios from './axios'\r\n\r\nconst userGetAllAdminOnline = (userId, token) => {\r\n    return axios.get(`/api/get-all-channel-online?userId=${userId}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    }).catch(e => {\r\n        return e.response && e.response.status\r\n    })\r\n}\r\n\r\nconst adminGetAllConversation = (adminId, token) => {\r\n    return axios.get(`/api/get-all-user-inbox?adminId=${adminId}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    }).catch(e => {\r\n        return e.response && e.response.status\r\n    })\r\n}\r\n\r\nconst getDetailConversation = (id, token, role) => {\r\n    return axios.get(`/api/get-detail-inbox?id=${id}&role=${role}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    }).catch(e => {\r\n        return e.response && e.response.status\r\n    })\r\n}\r\n\r\nconst sendMessage = (data) => {\r\n    return axios.post(`/api/send-message`, data, {\r\n        headers: { Authorization: `Bearer ${data.token}` }\r\n    }).catch(e => {\r\n        return e.response && e.response.status\r\n    })\r\n}\r\n\r\nconst getToken = (data) => {\r\n    return axios.post('/refresh-token', data, {\r\n        headers: { Authorization: `Bearer ${data.token}` }\r\n    }).catch(e => {\r\n        return e.response && e.response.status\r\n    })\r\n}\r\n\r\nexport {\r\n    userGetAllAdminOnline,\r\n    getDetailConversation,\r\n    sendMessage,\r\n    getToken,\r\n    adminGetAllConversation\r\n}","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { messagesRequested, newMessageAdded } from '../../store/actions';\nimport Message from '../../components/message/Message';\nimport './MessageList.scss';\nimport FormButton from '../../components/controls/buttons/FormButton';\nimport AttachmentIcon from '../../components/controls/icons/attachment-icon/AttachmentIcon';\nimport io from 'socket.io-client'\n\nconst isMessageEmpty = (textMessage) => {\n    return adjustTextMessage(textMessage).length === 0;\n}\n\nconst adjustTextMessage = (textMessage) => {\n    return textMessage.trim();\n};\n\nlet socket\n\nconst MessageList = ({\n    conversationId,\n    loadMessages,\n    messageDetails,\n    onMessageSubmitted,\n    adminId,\n    userId,\n    userRole,\n    userName,\n    token\n}) => {\n    const [state, setState] = useState({\n        allMessages: [],\n        prevMessage: null,\n        prevLength: 0,\n        textMessage: '',\n        file: null\n    })\n\n    const {\n        allMessages,\n        prevMessage,\n        prevLength,\n        textMessage,\n        file\n    } = state\n\n    const disableButton = isMessageEmpty(textMessage);\n\n    const _onReloadMessages = async () => {\n        await loadMessages({\n            conversationId: conversationId,\n            token: token,\n            role: userRole,\n            userId: userId\n        })\n\n        if (messageDetails && messageDetails.length > 0) {\n            setState(prev => ({\n                ...prev,\n                textMessage: '',\n                file: null,\n                allMessages: messageDetails,\n                prevLength: messageDetails.length,\n                prevMessage: messageDetails[messageDetails.length - 1]._id\n            }))\n        } else {\n            setState(prev => ({\n                ...prev,\n                prevLength: 0,\n                prevMessage: null,\n                allMessages: []\n            }))\n        }\n    }\n\n\n    useEffect(() => {\n        _onReloadMessages()\n    }, [])\n\n    useEffect(() => {\n        socket = io(\"https://daisycare-support.herokuapp.com\")\n\n        socket.emit('join', { userId: userId, userName: userName, roomId: conversationId }, async (e) => {\n            e && alert('connect error', e)\n            if (\n                messageDetails &&\n                messageDetails.length > 0 &&\n                (\n                    messageDetails[messageDetails.length - 1]._id !== prevMessage\n                    || messageDetails.length !== prevLength\n                )\n            ) {\n                await _onReloadMessages()\n            }\n        })\n\n        return () => {\n            socket.disconnect()\n            socket.off()\n        }\n    }, [_onReloadMessages])\n\n    useEffect(() => {\n        socket.on('receiveMessage', async () => {\n            await _onReloadMessages();\n        })\n    }, [_onReloadMessages])\n\n    const handleFormSubmit = async (e) => {\n        e.preventDefault();\n        if (!isMessageEmpty(textMessage)) {\n            await socket.emit('sendMessage',\n                { roomId: conversationId, senderId: userId },\n                async (senderId) => {\n                    await onMessageSubmitted({\n                        _id: conversationId,\n                        text: textMessage,\n                        senderId: userId,\n                        userId: userId,\n                        createdAt: new Date(),\n                        token: token,\n                        adminId: adminId._id\n                    });\n\n                    if (senderId === userId)\n                        await _onReloadMessages()\n                })\n        }\n    };\n\n    const _onChooseFile = async (e) => {\n        let attachment = e.target.files[0]\n        setState(prev => ({ ...prev, file: attachment }))\n        //convert to blob\n        const fetchFile = await fetch(file).then(res => res.arrayBuffer());\n        console.log(fetchFile);\n    }\n\n    const _onChangeTextInput = (e) => {\n        const { value, name } = e.target\n        setState(prev => ({\n            ...prev,\n            [name]: value\n        }))\n    }\n\n    return (\n        <>\n            <div id=\"chat-message-list\">\n                {allMessages.length > 0 ? allMessages.map((message, index) => {\n                    return <Message\n                        key={index}\n                        isMyMessage={message.senderId === userId}\n                        message={message} />;\n                }) : (\n                    <></>\n                )}\n            </div>\n            <form id=\"chat-form\" onSubmit={handleFormSubmit}>\n                <div title=\"Add Attachment\">\n                    <AttachmentIcon handleChooseFile={_onChooseFile} />\n                </div>\n                <input\n                    type=\"text\"\n                    placeholder=\"type a message\"\n                    value={textMessage}\n                    name=\"textMessage\"\n                    onChange={_onChangeTextInput} />\n                <FormButton disabled={disableButton}>Send</FormButton>\n            </form>\n        </>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        messageDetails: state.messagesState.messageDetails,\n        userId: state.userState.userId,\n        userRole: state.userState.userRole,\n        token: state.userState.token,\n        userName: state.userState.fullName\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        loadMessages: (data) => dispatch(messagesRequested(data)),\n        onMessageSubmitted: (data) => dispatch(newMessageAdded(data))\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MessageList);","import actionTypes from \"./actionTypes\";\r\nimport * as SERVICES from '../../services'\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const loadConversation = (userId, userRole, token) => async (dispatch) => {\r\n    dispatch({\r\n        type: actionTypes.PROCESS_MESSAGE_ACTION\r\n    })\r\n\r\n    let res = {};\r\n    if (userRole === \"R2\")\r\n        res = await SERVICES.userGetAllAdminOnline(userId, token)\r\n    else\r\n        res = await SERVICES.adminGetAllConversation(userId, token)\r\n    if (res) {\r\n        if (res === 401) {\r\n            let newToken = await refreshToken(userId, token)\r\n            if (newToken) {\r\n                toast.error('Request out of time. Let try again!')\r\n                dispatch({\r\n                    type: actionTypes.UPDATE_TOKEN,\r\n                    token: newToken\r\n                })\r\n            }\r\n            //get new token if cant redirect /login\r\n            else\r\n                clearAll()\r\n        } else if (res === 403) {\r\n            //force to /login\r\n            clearAll()\r\n        } else {\r\n            dispatch({\r\n                type: actionTypes.CONVERSATIONS_LOADED,\r\n                payload: {\r\n                    conversations: res.data && res.data,\r\n                    selectedConversation: res.data && res.data[0]\r\n                }\r\n            })\r\n        }\r\n    } else\r\n        dispatch({\r\n            type: actionTypes.PROCESS_MESSAGE_ACTION_FAILED\r\n        })\r\n}\r\n\r\nexport const conversationChanged = (data) => async (dispatch) => {\r\n    dispatch(messagesRequested(data))\r\n    dispatch({\r\n        type: 'SELECTED_CONVERSATION_CHANGED',\r\n        conversationId: data.conversationId\r\n    })\r\n};\r\n\r\nexport const conversationsRequested = () => ({\r\n    type: 'CONVERSATIONS_REQUESTED'\r\n});\r\n\r\nexport const conversationDeleted = () => ({\r\n    type: 'DELETE_CONVERSATION'\r\n});\r\n\r\nexport const newMessageAdded = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: actionTypes.PROCESS_MESSAGE_ACTION\r\n    })\r\n\r\n    let res = await SERVICES.sendMessage(data)\r\n    if (res) {\r\n        if (res === 401) {\r\n            let newToken = await refreshToken(data.userId, data.token)\r\n            if (newToken) {\r\n                toast.error('Request out of time. Let try again!')\r\n                dispatch({\r\n                    type: actionTypes.UPDATE_TOKEN,\r\n                    token: newToken\r\n                })\r\n            }\r\n            //get new token if cant redirect /login\r\n            else\r\n                clearAll()\r\n        } else if (res === 403) {\r\n            //force to /login\r\n            clearAll()\r\n        } else {\r\n            dispatch({\r\n                type: actionTypes.NEW_MESSAGE_ADDED\r\n            })\r\n        }\r\n    } else\r\n        dispatch({\r\n            type: actionTypes.PROCESS_MESSAGE_ACTION_FAILED\r\n        })\r\n};\r\n\r\nexport const messagesRequested = (data) => async (dispatch) => {\r\n    const { conversationId, token, role, userId } = data\r\n    dispatch({\r\n        type: actionTypes.PROCESS_MESSAGE_ACTION\r\n    })\r\n    let res = await SERVICES.getDetailConversation(conversationId, token, role);\r\n    if (res) {\r\n        if (res === 401) {\r\n            //get new token if cant redirect /login\r\n            let newToken = await refreshToken(userId, token)\r\n            if (newToken) {\r\n                toast.error('Request out of time. Let try again!')\r\n                dispatch({\r\n                    type: actionTypes.UPDATE_TOKEN,\r\n                    token: newToken\r\n                })\r\n            }\r\n            //force to /login\r\n            else\r\n                clearAll()\r\n        } else if (res === 403) {\r\n            //force to /login\r\n            clearAll()\r\n        } else {\r\n            dispatch({\r\n                type: actionTypes.MESSAGES_REQUESTED,\r\n                payload: res.errCode === 0 ? res.data.messages : [],\r\n            })\r\n        }\r\n    } else\r\n        dispatch({\r\n            type: actionTypes.PROCESS_MESSAGE_ACTION_FAILED\r\n        })\r\n};\r\n\r\nconst refreshToken = async (userId, token) => {\r\n    let res = await SERVICES.getToken({\r\n        userId: userId,\r\n        token: token\r\n    })\r\n    if (res === 403) {\r\n        clearAll()\r\n        return null\r\n    }\r\n    return res.token;\r\n}\r\n\r\nconst clearAll = () => {\r\n    window.localStorage.clear()\r\n    window.location.href = '/login'\r\n}\r\n","import React, { useState } from 'react';\nimport './ConversationSearch.scss';\n\nconst ConversationSearch = ({ conversations }) => {\n    const [searchInput, setSearchInput] = useState('')\n\n    return (\n        <div id=\"search-container\">\n            {conversations && conversations.length > 0 && <input type=\"text\" placeholder=\"Search\" />}\n        </div>\n    );\n}\n\nexport default ConversationSearch;","import React from 'react';\n\nimport './Button.scss';\n\nconst Button = ({children}) => {\n    return (\n        <>\n            <button className=\"primary-button\">{ children }</button>\n        </>\n    );\n}\n\nexport default Button;","import React from 'react';\n\nimport Button from '../../controls/buttons/Button';\n\nimport './NoConversations.scss';\n\nconst NoConversations = () => {\n    return (\n        <div id=\"no-coversation-layout\">\n            <div id=\"no-conversation-content\">\n                <h2>No Admin Online Now</h2>\n                <p>Currently, We work from 8:00 a.m to 9:00 p.m.</p>\n                <p>Sorry for making you have to wait!.</p>\n                <p>If you want to receive notification when Channel is on. Click the button bellow!</p>\n                <Button>Notify Me</Button>\n            </div>\n        </div>\n    );\n}\n\nexport default NoConversations;","export const imageAdmin = \"https://bizweb.dktcdn.net/100/173/931/themes/233699/assets/sp3.jpg?1610425866100\"\r\nexport const imageUser=\"https://www.kindpng.com/picc/m/105-1055656_account-user-profile-avatar-avatar-user-profile-icon.png\"","import React from 'react';\nimport classNames from 'classnames';\n\nimport './ConversationItem.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { imageAdmin, imageUser } from '../../../images';\nimport moment from 'moment';\nimport { messagesRequested } from '../../../store/actions';\n\n\nconst ConversationItem = ({ conversation, isActive, onConversationItemSelected }) => {\n    const className = classNames('conversation', {\n        'active': isActive\n    });\n\n    const { userRole, token, userId } = useSelector(state => state.userState)\n    const dispatch = useDispatch()\n\n    const onChangeSelectedConversation = async () => {\n        await onConversationItemSelected({\n            conversationId: conversation._id,\n            token: token,\n            role: userRole,\n            userId: userId\n        })\n        await dispatch(messagesRequested({\n            conversationId: conversation._id,\n            token: token,\n            role: userRole,\n            userId: userId\n        }))\n    }\n\n    return (\n        <div className={className} onClick={onChangeSelectedConversation}>\n            <img src={userRole===\"R2\" ? imageAdmin : imageUser } alt=\"imageAlt\" />\n            <div className=\"title-text\">{conversation.userId.fullName || conversation.adminId.fullName}</div>\n            <div className=\"created-date\">{moment(conversation.createdAt).startOf('hour').fromNow()}</div>\n            <div className=\"conversation-message\">\n                {conversation.latestMessageText ? conversation.latestMessageText : \"Chat now\"}\n            </div>\n        </div>\n    );\n}\n\nexport default ConversationItem;\n","import React from 'react';\n\nimport ConversationItem from '../conversation-item/ConversationItem';\nimport './ConversationList.scss';\n\nconst ConversationList = ({ conversations, selectedConversation, onConversationItemSelected }) => {\n    const conversationItems = conversations.map((conversation) => {\n        const conversationIsActive = selectedConversation && conversation._id === selectedConversation._id;\n        \n        return <ConversationItem\n            key={conversation._id}\n            onConversationItemSelected={onConversationItemSelected}\n            isActive={conversationIsActive}\n            conversation={conversation} />;\n    });\n\n    return (\n        <div id=\"conversation-list\">\n            {conversationItems}\n        </div>\n    );\n}\n\nexport default ConversationList;","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport './LogOutButton.scss';\n\nconst LogOutButton = ({ onLogout }) => {\n\n    const { userId } = useSelector(state => state.userState)\n\n    return (\n        <div id=\"new-message-container\">\n            <button onClick={() => onLogout(userId)}>\n                <img src=\"https://img.icons8.com/flat-round/64/000000/shutdown--v1.png\" alt=\"Logout\" />\n            </button>\n        </div>\n    );\n}\n\nexport default LogOutButton;","import React from 'react';\n\nimport './TrashIcon.scss';\n\nconst TrashIcon = () => {\n    return (\n        <svg className=\"trash-logo\" enableBackground=\"new 0 0 500 500\" version=\"1.1\" viewBox=\"0 0 500 500\" xmlSpace=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n            <g>\n                <line fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\" x1=\"101.642\" x2=\"120.633\" y1=\"134.309\" y2=\"430.972\"/>\n                <path d=\"   M120.633,430.972c0,10.5,8.519,19.031,18.992,19.031\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\"/>\n                <line fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\" x1=\"139.625\" x2=\"360.389\" y1=\"450.003\" y2=\"450.003\"/>\n                <path d=\"   M360.389,450.003c10.474,0,18.979-8.531,18.979-19.031\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\"/>\n                <polyline fill=\"none\" points=\"   379.367,430.972 398.386,134.309 101.642,134.309  \" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\"/>\n                <path d=\"   M432.779,115.973c0,10.059-8.143,18.215-18.188,18.215\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\"/>\n                <line fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\" x1=\"414.592\" x2=\"85.409\" y1=\"134.188\" y2=\"134.188\"/>\n                <path d=\"   M85.409,134.188c-10.018,0-18.188-8.156-18.188-18.215\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\"/>\n                <path d=\"   M67.221,115.973c0-10.019,8.17-18.188,18.188-18.188\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\"/>\n                <line fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\" x1=\"85.409\" x2=\"414.592\" y1=\"97.784\" y2=\"97.784\"/>\n                <path d=\"   M414.592,97.784c10.045,0,18.188,8.17,18.188,18.188\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\"/>\n                <line fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\" x1=\"307.364\" x2=\"307.364\" y1=\"97.49\" y2=\"68.988\"/>\n                <path d=\"   M307.364,68.988c0-10.474-8.505-18.991-18.965-18.991\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\"/>\n                <line fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\" x1=\"288.399\" x2=\"211.628\" y1=\"49.997\" y2=\"49.997\"/>\n                <path d=\"   M211.628,49.997c-10.487,0-18.979,8.518-18.979,18.991\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\"/>\n                <polyline fill=\"none\" points=\"   192.649,68.988 192.649,97.49 307.364,97.49  \" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\"/>\n            </g>\n            <g>\n                <line fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\" x1=\"166.332\" x2=\"166.332\" y1=\"172.278\" y2=\"406.06\"/>\n                <line fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\" x1=\"222.102\" x2=\"222.102\" y1=\"172.278\" y2=\"406.06\"/>\n                <line fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\" x1=\"277.926\" x2=\"277.926\" y1=\"172.278\" y2=\"406.06\"/>\n                <line fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"2.6131\" strokeWidth=\"10\" x1=\"333.669\" x2=\"333.669\" y1=\"172.278\" y2=\"406.06\"/>\n            </g>\n        </svg>\n    );\n}\n\nexport default TrashIcon;","import React from 'react';\n\nimport TrashIcon from '../controls/icons/trash-icon/TrashIcon';\n\nimport './ChatTitle.scss';\n\nconst ChatTitle = ({ selectedConversation, onDeleteConversation }) => {\n    \n    return (\n        <div id=\"chat-title\">\n            {selectedConversation && \n                <>\n                <span>{selectedConversation.adminId.fullName}</span>\n                <div onClick={() => onDeleteConversation()} title=\"Delete Conversation\">\n                    <TrashIcon />\n                </div>\n                </>\n            }\n        </div>\n    );\n}\n\nexport default ChatTitle;","import React from 'react';\nimport classNames from 'classnames';\nimport './Message.scss';\nimport { useSelector } from 'react-redux';\nimport { imageAdmin, imageUser } from '../../images';\nimport moment from 'moment';\n\nconst Message = ({ isMyMessage, message }) => {\n    const messageClass = classNames('message-row', {\n        'you-message': isMyMessage,\n        'other-message': !isMyMessage\n    });\n\n    const { userRole } = useSelector(state => state.userState)\n    \n    const imageThumbnail = isMyMessage\n        ? null\n        : <img src={userRole===\"R2\" ? imageAdmin : imageUser } alt={'imageAlt'} />;\n\n    return (\n        <div className={messageClass}>\n            <div className=\"message-content\">\n                {imageThumbnail}\n                <div className=\"message-text\">\n                    {message.text}\n                </div>\n                <div className=\"message-time\">{moment(message.createdAt).startOf('second').fromNow()}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default Message;","import React from 'react';\n\nimport './Button.scss';\n\nconst FormButton = ({children, disabled}) => {\n    return (\n        <>\n            <button \n                type=\"submit\" \n                className=\"primary-button\"\n                disabled={disabled}>{ children }</button>\n        </>\n    );\n}\n\nexport default FormButton;","import React from 'react';\n\nimport './AttachmentIcon.scss';\n\nconst AttachmentIcon = ({ handleChooseFile, }) => {\n    return (\n        <>\n            <input type=\"file\" id=\"file\" hidden onChange={handleChooseFile} />\n            <label htmlFor=\"file\">\n                <svg\n                    version=\"1.1\" className=\"attachment-logo\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\n                    viewBox=\"0 0 512.001 512.001\" xmlSpace=\"preserve\">\n                    <path d=\"M475.753,61.289c-48.329-48.329-126.967-48.329-175.296,0L15.535,346.212\n                c-20.713,20.713-20.713,54.413,0,75.127l50.085,50.085c20.713,20.713,54.413,20.713,75.127,0l221.305-221.305\n                c20.713-20.713,20.713-54.413,0-75.127s-54.413-20.713-75.127,0L168.981,292.935c-6.915,6.915-6.915,18.127,0,25.042\n                c6.915,6.915,18.127,6.915,25.042,0l117.943-117.943c6.903-6.903,18.137-6.906,25.042,0c6.906,6.906,6.903,18.14,0,25.042\n                L115.705,446.38c-6.903,6.903-18.137,6.906-25.042,0l-50.085-50.085c-6.906-6.906-6.903-18.14,0-25.042L325.499,86.332\n                c34.519-34.519,90.689-34.522,125.211,0s34.519,90.693,0,125.211l-181.56,181.56c-6.915,6.915-6.915,18.127,0,25.042\n                c6.915,6.915,18.127,6.915,25.042,0l181.56-181.56C524.083,188.256,524.083,109.62,475.753,61.289z\"/>\n                    <g>\n                        <path d=\"M299.446,187.512L181.503,305.456c-4.623,4.623-6.081,11.149-4.523,17.045\n                    c-2.924-0.772-5.705-2.231-7.997-4.523c-6.915-6.915-6.915-18.127,0-25.042l117.943-117.943c20.713-20.713,54.413-20.713,75.127,0\n                    c2.137,2.137,3.999,4.44,5.695,6.826C347.015,167.074,318.022,168.936,299.446,187.512z\"/>\n                        <path d=\"M456.654,92.911c2.265,1.855,4.465,3.83,6.578,5.943c34.522,34.522,34.519,90.693,0,125.211\n                    l-181.56,181.56c-4.623,4.623-6.081,11.149-4.523,17.045c-2.924-0.772-5.705-2.231-7.997-4.523c-6.915-6.915-6.915-18.127,0-25.042\n                    l181.56-181.56C483.117,179.138,485.094,127.655,456.654,92.911z\"/>\n                        <path d=\"M115.705,446.38l221.305-221.305c4.613-4.613,6.07-11.142,4.519-17.04\n                    c2.927,0.77,5.712,2.228,8.003,4.519c6.906,6.906,6.903,18.14,0,25.042L128.226,458.902c-6.903,6.903-18.137,6.906-25.042,0\n                    L90.663,446.38C97.568,453.286,108.802,453.283,115.705,446.38z\"/>\n                        <path d=\"M312.978,73.811L28.057,358.732c-20.713,20.713-20.713,54.413,0,75.127l-12.521-12.521\n                    c-20.713-20.713-20.713-54.413,0-75.127L300.457,61.289c48.329-48.329,126.967-48.329,175.296,0\n                    c2.113,2.113,4.015,4.354,5.943,6.577C433.056,25.693,359.195,27.594,312.978,73.811z\"/>\n                    </g>\n                </svg>\n\n            </label>\n        </>\n    );\n}\n\nexport default AttachmentIcon;","\r\nimport React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst CustomModal = (props) => {\r\n  const {\r\n    toggle,\r\n    modal\r\n  } = props;\r\n\r\n  return (\r\n      <Modal isOpen={modal} toggle={toggle} style={{zIndex: 100}}>\r\n        <ModalHeader toggle={toggle}>Welcome to Daisy Care Support page!</ModalHeader>\r\n        <ModalBody>\r\n            <h3>Currently, We work from 8:00 a.m to 9:00 p.m.</h3>\r\n            <h5>Channel 1: Ask about common problems.</h5>\r\n            <h5>Channel 2: Support you booking schedule/ change schedule.</h5>\r\n            <h5>Channel 3: Ask/Complain about our service.</h5>\r\n            <h6>Have a good day!</h6>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={toggle}>I got it</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n  );\r\n}\r\n\r\nexport default CustomModal;","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n    conversationChanged,\n    conversationDeleted,\n    loadConversation,\n    HandleSignOut\n} from '../../store/actions';\nimport ConversationSearch from '../../components/conversation/conversation-search/ConversationSearch';\nimport NoConversations from '../../components/conversation/no-conversations/NoConversations';\nimport ConversationList from '../../components/conversation/conversation-list/ConversationList';\nimport LogoutButton from '../../components/conversation/button-logout/LogOutButton';\nimport ChatTitle from '../../components/chat-title/ChatTitle';\nimport MessageList from '../message/MessageList';\nimport CustomModal from '../../components/modal'\n\nimport './ChatShell.scss';\n\nconst ChatShell = ({\n    conversations,\n    selectedConversation,\n    conversationChanged,\n    onDeleteConversation,\n    loadConversations,\n    onLogout,\n    userRole,\n    userId,\n    token\n}) => {\n    useEffect(() => {\n        loadConversations(userId, userRole, token);\n    }, [loadConversations]);\n\n    const [modal, setModal] = useState(true);\n\n    const toggle = () => setModal(!modal);\n\n    return (\n        <>\n        <div id=\"chat-container\">\n            <ConversationSearch conversations={conversations} />\n            <ConversationList\n                onConversationItemSelected={conversationChanged}\n                conversations={conversations}\n                selectedConversation={selectedConversation} />\n            <LogoutButton\n                onLogout={onLogout}\n            />\n            <ChatTitle\n                selectedConversation={selectedConversation}\n                onDeleteConversation={onDeleteConversation}\n            />\n            {\n                conversations.length > 0 ? (\n                    <MessageList\n                        conversationId={selectedConversation._id}\n                        adminId={selectedConversation.adminId}\n                    />\n                ) : (\n                    <NoConversations />\n                )\n            }\n        </div>\n        <CustomModal toggle={toggle} modal={modal}/>\n        </>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        conversations: state.conversationState.conversations,\n        selectedConversation: state.conversationState.selectedConversation,\n        userRole: state.userState.userRole,\n        token: state.userState.token,\n        userId: state.userState.userId\n    };\n};\n\nconst mapDispatchToProps = dispatch => ({\n    conversationChanged: (data) => dispatch(conversationChanged(data)),\n    onDeleteConversation: () => dispatch(conversationDeleted()),\n    loadConversations: (userId, userRole, token) => dispatch(loadConversation(userId, userRole, token)),\n    onLogout: (userId) => dispatch(HandleSignOut(userId))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ChatShell);","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\"\r\nimport { Forget, Login } from './containers/auth'\r\nimport ChatShell from './containers/shell/ChatShell'\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst App = () => {\r\n  const { isUserLoggedIn } = useSelector(state => state.userState)\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path='/' component={ChatShell} />\r\n          <Route exact path='/login' component={Login} />\r\n          <Route exact path='forgot-password' component={Forget} />\r\n        </Switch>\r\n        <Redirect to={isUserLoggedIn ? '/' : '/login'} />\r\n      </Router>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={2000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme=\"dark\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.scss';\nimport rootReducer from './store/reducers';\nimport App from './App';\n\n\nconst middleWare = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(...middleWare)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}